
C:\Users\mpeng\Documents\java\GameMakerOrphanedFiles>cls

C:\Users\mpeng\Documents\java\GameMakerOrphanedFiles>del /S *.class 
Deleted file - C:\Users\mpeng\Documents\java\GameMakerOrphanedFiles\GMOrphanedFiles.class
Deleted file - C:\Users\mpeng\Documents\java\GameMakerOrphanedFiles\assets\gm1\GM1Background.class
Deleted file - C:\Users\mpeng\Documents\java\GameMakerOrphanedFiles\assets\gm1\GM1File.class
Deleted file - C:\Users\mpeng\Documents\java\GameMakerOrphanedFiles\assets\gm1\GM1Font.class
Deleted file - C:\Users\mpeng\Documents\java\GameMakerOrphanedFiles\assets\gm1\GM1Macro.class
Deleted file - C:\Users\mpeng\Documents\java\GameMakerOrphanedFiles\assets\gm1\GM1Object.class
Deleted file - C:\Users\mpeng\Documents\java\GameMakerOrphanedFiles\assets\gm1\GM1Path.class
Deleted file - C:\Users\mpeng\Documents\java\GameMakerOrphanedFiles\assets\gm1\GM1Project.class
Deleted file - C:\Users\mpeng\Documents\java\GameMakerOrphanedFiles\assets\gm1\GM1Room.class
Deleted file - C:\Users\mpeng\Documents\java\GameMakerOrphanedFiles\assets\gm1\GM1Script.class
Deleted file - C:\Users\mpeng\Documents\java\GameMakerOrphanedFiles\assets\gm1\GM1Shader.class
Deleted file - C:\Users\mpeng\Documents\java\GameMakerOrphanedFiles\assets\gm1\GM1Sound.class
Deleted file - C:\Users\mpeng\Documents\java\GameMakerOrphanedFiles\assets\gm1\GM1Sprite.class
Deleted file - C:\Users\mpeng\Documents\java\GameMakerOrphanedFiles\assets\gm1\GM1Timeline.class

C:\Users\mpeng\Documents\java\GameMakerOrphanedFiles>"C:\Program Files\Java\jdk1.8.0_151\bin\javac" GMOrphanedFiles.java 

C:\Users\mpeng\Documents\java\GameMakerOrphanedFiles>java GMOrphanedFiles project.gmx 
32
256
make_color_rgb
139
69
19
c_blue
c_green
c_red
c_yellow
make_color_rgb
255
105
180
true
room_height
"log
txt"
100
1000000
4
chr
$0a
6
0
0
5
2
32
64
128
400
160
32
room_width
32
room_width
2
3
room_width
setup
singleton
stage
BattleStages
BEGIN
animator
noone
input_ready
true
input_processing
noone
input_stage
BattleInputStages
GRAND
result
BattleStatus
CONTINUE
teams
ds_list_create
contestants
ds_list_create
drawables
ds_list_create
replacements
ds_list_create
actions
ds_queue_create
round_actions
ds_queue_create
individual_actions
ds_queue_create
priority
ds_priority_create
misc_data
ds_map_create
battle
constants
enum
BattleStages
BEGIN
LOOP
END
enum
BattleStatus
CONTINUE
WIN
DRAW
enum
BattleInputStages
GRAND
MOVE
ITEM
SWITCH
FLEE
LEVEL_STAT_DELTA
LEVEL_STAT_TOTAL
todo
other
screens
such
as
the
"learn
a
new
move"
screen
SWITCH_BEFORE_TURN
for
var
i
0
i
ds_list_size
drawables
i
with
drawables
i
instance_destroy
ds_list_destroy
teams
ds_list_destroy
contestants
ds_list_destroy
drawables
ds_list_destroy
replacements
ds_queue_destroy
actions
ds_queue_destroy
round_actions
ds_queue_destroy
individual_actions
ds_priority_destroy
priority
ds_map_destroy
misc_data
user
noone
target
noone
target_list
noone
t
0
If
you
hand
control
to
this
as
it
is
the
game
will
most
likely
enter
a
state
where
it
accepts
no
input
and
you
have
to
restart
it
script
null
misc
data
for
misc
things
misc_data
ds_map_create
if
target_list
noone
ds_list_destroy
target_list
ds_map_destroy
misc_data
image_speed
0
z
0
scale
0
5
xscale
1
yscale
1
rotation
0
alpha
1
color
c_white
blend
bm_normal
offscreen_x
x
offscreen_y
y
battle_x
x
battle_y
y
distance
0
fade_time
1
center_direction
0
owner
noone
hud
noone
surface
surface_create
sprite_width
sprite_height
mask_script
null
misc_data
ds_map_create
if
hud
noone
with
hud
instance_destroy
if
surface_exists
surface
surface_free
surface
ds_map_destroy
misc_data
draw
me
if
surface_exists
surface
surface
surface_create
sprite_width
sprite_height
d3d_end
d3d_set_hidden
false
surface_set_target
surface
draw_clear_alpha
c_black
0
draw_sprite_general
sprite_index
floor
image_index
0
0
sprite_width
sprite_height
0
0
1
1
0
color
color
color
color
alpha
script_execute
mask_script
surface_reset_target
d3d_start
d3d_set_hidden
true
THIS
NEEDS
TO
BE
DELETED
WHEN
YOU'RE
DONE
WITH
IT
OTHERWISE
MEMORY
LEAK
action
BattleActions
MOVE
user
noone
target_type
BattleTargets
OPPONENT
targets
noone
value
0
constants
enum
BattleActions
MOVE
ITEM
SWITCH
FLEE
IDLE
enum
BattleTargets
OPPONENT
SELF
we're
pretty
sure
this
is
going
to
be
assigned
a
list
value
but
just
in
case
it's
not
if
targets
noone
ds_list_destroy
targets
user
noone
offscreen_x
x
offscreen_y
y
battle_x
x
battle_y
y
distance
0
script
null
params
ds_list_create
ds_list_destroy
params
species
0
name
""
owner
noone
the
Pawn
this
should
ONLY
be
used
in
battle
trainer
noone
the
DataTrainer
act
array_create
6
for
var
i
0
i
6
i
act
i
20
act_hp
50
act
Stats
HP
50
mods
array_create
8
for
var
i
0
i
8
i
mods
i
0
moves
array_create
MOVE_LIMIT
for
var
i
0
i
MOVE_LIMIT
i
moves
i
noone
previous_moves
ds_list_create
gender
Genders
MALE
status
MajorStatus
NONE
item
0
form
0
the
ability
is
an
index
0
max
ability
index
not
0
size
of
base
ability
list
because
a
pokémon's
ability
can
be
changed
during
battle
Simple
etc
ability
0
this
is
the
one
that
goes
0
size
of
base
ability
index
default_ability
0
experience
1
evs
array_compose
0
0
0
0
0
0
ivs
array_compose
irandom
1
5
1
irandom
1
5
1
irandom
1
5
1
irandom
1
5
1
irandom
1
5
1
irandom
1
5
1
there
are
a
few
cases
in
which
your
individual
types
can
be
modified
in
battle
but
they're
not
very
common
types
ds_list_clone
get_pokemon
species
types
todo
this
nature
0
battle
stuff
position
1
this
is
so
that
the
game
can
know
that
you've
fainted
before
it
executes
the
action
that
makes
you
faint
i
e
to
keep
fainted
pokémon
from
executing
moves
or
beint
targeted
by
other
moves
flag_downed
false
some
more
things
shadow
false
ball_type
0
shiny
false
constants
and
stuff
enum
MajorStatus
NONE
POISON
BURN
PARALYZE
SLEEP
FREEZE
enum
Stats
HP
ATTACK
DEFENSE
SPATTACK
SPDEFENSE
SPEED
ACCURACY
EVADE
ds_list_destroy
types
ds_list_destroy
previous_moves
script
null
params
ds_list_create
ds_list_destroy
params
name
"Team"
string
instance_number
BattleTeam
owner
noone
sprite_side
SpriteSides
FRONT
ds_list_destroy
party
singleton
fov
45
x
BATTLEFIELD_SIZE
2
y
BATTLEFIELD_SIZE
z
BATTLEFIELD_SIZE
8
xto
x
yto
0
zto
0
xup
0
yup
0
zup
1
THEORETICALLY
and
this
is
a
really
big
"theoretically"
you
could
make
this
a
multiplayer
game
and
each
client
would
be
able
to
play
the
right
animation
and
poll
the
right
contestant
for
input
based
on
this
variable
In
practice
this
is
never
going
to
happen
battle_pawn
noone
3D
stuff
d3d_start
d3d_set_culling
true
d3d_set_shading
true
d3d_set_hidden
true
draw_set_color
c_white
d3d_set_projection_ext
x
y
z
xto
yto
zto
xup
yup
zup
fov
room_width
room_height
1
1000
d3d_model_draw
global
model_floor
0
0
0
background_get_texture
b_tex_temp
whenever
you
get
around
to
drawing
the
game
world
it
probably
goes
here
i
suppose
you
could
also
just
say
with
BattleDrawable
but
it's
possible
that
you
want
some
of
them
to
be
hidden
or
something
for
var
i
0
i
ds_list_size
Battle
drawables
i
with
Battle
drawables
i
bg_draw_drawable
with
BattleAnimator
script_execute
script
less
important
effects
go
on
top
of
everything
else
because
the
depth
buffer
is
weird
with
WorldEffect
script_execute
render
event_inherited
name
"Base
Ability"
pbs_internal_name
"BASEABILITY"
summary
"it
does
something
probably"
script
babl_default
event_inherited
name
"Default
Move
Effect"
summary
"it
doesnt
do
anything"
script
null
odds
0
event_inherited
name
"Base
Egg
Group"
restricted
false
false
if
this
group
can
breed
with
itself
true
if
it
can't
undiscovered
unrestricted
false
true
if
this
group
can
breed
with
anything
ditto
false
if
it
can't
if
you
want
to
you
could
set
up
a
matrix
like
the
ones
in
DataType
that
make
an
egg
group
compatible
with
multiple
other
egg
groups
there
isn't
a
precedent
in
Pokémon
for
that
though
so
I'm
not
going
to
go
that
far
event_inherited
script
null
event_inherited
name
"Base
Egg
Group"
there
might
be
other
attributes
later
like
"icon
sprite"
or
something
idk
variables
event_inherited
target
0
type
0
value
1
event_inherited
name
"Base
Item"
internal_name
"BASEITEM"
summary
"it
doesnt
do
anything"
plural
"Base
Items"
pocket
ItemPockets
ITEMS
price
500
overworld
0
battle
0
special
0
ordinarily
the
id
of
the
move
that
the
tm
hm
attaches
to
this
item
but
not
necessarily
value
0
event_inherited
name
"Items"
color
c_yellow
icon
1
se
1
different
pockets
can
have
different
sounds
when
you
obtain
something
for
it
event_inherited
name
"Base
Move"
pbs_internal_name
"BASEMOVE"
summary
"very
basic"
type
Types
NORMAL
value
50
pp
20
accuracy
100
priority
0
target
MoveTargets
ADJACENT
category
MoveCategories
PHYSICAL
flags
0
effects
ds_list_create
effect_odds
ds_list_create
animation
ba_move_basic
constants
and
stuff
enum
MoveTargets
ADJACENT
NONE
ADJACENTRANDOM
ALLOPPONENTS
ALLNONUSER
USER
BATTLEFIELD
USERTEAM
OPPONENTTEAM
PARTNER
SINGLETEAMMATE
SINGLEOPPONENT
SINGLEACROSS
enum
MoveCategories
PHYSICAL
SPECIAL
STATUS
PHYSICAL_ATK_SPECIAL_DEF
SPECIAL_ATK_PHYSICAL_DEF
this
will
probably
never
happen
but
ds_list_destroy
effects
ds_list_destroy
effect_odds
event_inherited
name
"Nature"
affects
array_compose
1
1
1
1
1
1
event_inherited
name
"Base
Pokemon"
kind
"Base"
summary
"very
basic"
base_stat
array_create
6
base_stat
Stats
HP
60
base_stat
Stats
ATTACK
60
base_stat
Stats
DEFENSE
60
base_stat
Stats
SPATTACK
60
base_stat
Stats
SPDEFENSE
60
base_stat
Stats
SPEED
60
you
can
theoretically
have
as
many
types
as
you
want
although
i
warn
you
more
than
two
is
probably
not
a
good
idea
types
ds_list_create
abilities
ds_list_create
hidden_abilities
ds_list_create
moves
ds_list_create
move_levels
ds_list_create
egg_moves
ds_list_create
egg_groups
ds_list_create
indices
ds_list_create
evolutions
ds_list_create
spr_front
spr_pokemon_unknown
spr_back
spr_pokemon_unknown
gender
0
5
1
means
genderless
0
means
all
male
0
5
means
50
50
1
means
all
female
growth_rate
GrowthRates
MEDIUM_SLOW
reward_exp
50
catch_rate
100
happiness
70
egg_steps
6000
reward_ev
Stats
HP
0
reward_ev
Stats
ATTACK
0
reward_ev
Stats
DEFENSE
0
reward_ev
Stats
SPATTACK
0
reward_ev
Stats
SPDEFENSE
0
reward_ev
Stats
SPEED
0
height
1
weight
10
color
c_white
shape
1
habitat
Habitats
GRASSLAND
incense
1
wild_items
array_create
100
form_name
""
forms
ds_map_create
ehh
pbs_internal_name
"BASEPOKEMON"
constants
and
stuff
enum
Genders
MALE
FEMALE
GENDERLESS
enum
GrowthRates
ERRATIC
FAST
MEDIUM_FAST
MEDIUM_SLOW
SLOW
FLUCTUATING
enum
Habitats
CAVE
FOREST
GRASSLAND
MOUNTAIN
RARE
ROUGHTERRAIN
SEA
URBAN
WATERSEDGE
ds_list_destroy
types
ds_list_destroy
abilities
ds_list_destroy
hidden_abilities
ds_list_destroy
moves
ds_list_destroy
move_levels
ds_list_destroy
egg_moves
ds_list_destroy
egg_groups
ds_list_destroy
indices
for
var
i
0
i
ds_list_size
evolutions
i
with
evolutions
i
instance_destroy
ds_list_destroy
evolutions
ds_map_destroy
forms
event_inherited
name
"Pawn"
class
0
version
1
items
ds_list_create
party
ds_list_create
ds_list_destroy
items
for
var
i
0
i
ds_list_size
party
i
with
party
i
instance_destroy
ds_list_destroy
party
event_inherited
name
"Pawn"
internal_name
"PAWN"
battle_sprite
ClassBattleSprites
PLAYER
audio_battle
ClassBattleBGM
SILENCE
audio_victory
ClassVictoryBGM
SILENCE
audio_intro
ClassIntroME
SILENCE
ai
32
reward
32
gender
Genders
GENDERLESS
ai_notes
ds_list_create
misc
constants
and
stuff
enum
ClassBattleBGM
SILENCE
enum
ClassVictoryBGM
SILENCE
enum
ClassIntroME
SILENCE
enum
ClassBattleSprites
PLAYER
RIVAL
ds_list_destroy
ai_notes
event_inherited
name
"Base
Type"
pbs_internal_name
"BASETYPE"
special
false
color
c_yellow
this
is
how
much
damage
THIS
type
deals
to
each
OTHER
type
on
null
misc
constants
if
you
modify
the
pbs
remember
to
modify
this
otherwise
you're
not
going
to
have
a
fun
time
enum
Types
NORMAL
FIGHTING
FLYING
POISON
GROUND
ROCK
BUG
GHOST
STEEL
QMARKS
FIRE
WATER
GRASS
ELECTRIC
PSYCHIC
ICE
DRAGON
DARK
FAIRY
vanilla
pbs
does
not
have
this
data
so
we'll
leave
it
out
instance_create
0
0
Camera
instance_create
0
0
World
instance_create
0
0
Battle
get_trainer_class
get_trainer_class_from_name
"PLAYERPAWN"
true
battle_sprite
ClassBattleSprites
PLAYER
get_trainer_class
get_trainer_class_from_name
"PAWN"
true
battle_sprite
ClassBattleSprites
RIVAL
var
pawn_player
pawn_create
"PLAYERPAWN"
"Bilbo
Baggins"
1
PawnPlayer
var
pawn_ai
pawn_create
"PAWN"
"Silver"
Camera
battle_pawn
pawn_player
var
MIDPOINT
BATTLEFIELD_SIZE
2
var
dist
BATTLEFIELD_SIZE
4
var
dir
240
var
trans_distance
60
var
fade_time
0
05
var
offx
room_width
var
offy
room_height
UI_TEXT_BOX_HEIGHT
UI_BATTLE_HUD_HEIGHT
UI_BATTLE_HUD_BUFFER_Y
var
team
battle_add_team
pawn_player
SpriteSides
BACK
you
could
add
a
team
multiple
times
if
you
want
to
set
up
a
double
battle
or
something
but
only
create
it
once
or
youre
going
to
have
problems
ds_list_add
Battle
teams
team
ds_list_add
Battle
contestants
noone
ds_list_add
Battle
drawables
battle_add_position
pawn_player
MIDPOINT
dist
dcos
dir
MIDPOINT
dist
dsin
dir
90
trans_distance
fade_time
offx
offy
ds_list_add
Battle
replacements
noone
dir
60
trans_distance
36
fade_time
0
5
offx
UI_BATTLE_HUD_WIDTH
offy
UI_BATTLE_HUD_HEIGHT
2
64
you
can
fit
half
of
one
between
the
actual
top
of
the
box
and
the
top
of
the
screen
team
battle_add_team
pawn_ai
SpriteSides
FRONT
ds_list_add
Battle
teams
team
ds_list_add
Battle
contestants
noone
ds_list_add
Battle
drawables
battle_add_position
pawn_ai
MIDPOINT
dist
dcos
dir
MIDPOINT
dist
dsin
dir
270
trans_distance
fade_time
offx
offy
ds_list_add
Battle
replacements
noone
with
Battle
battle_begin
instance_destroy
render
null
image_speed
0
t
0
event_inherited
alpha
1
color
c_white
xscale
1
yscale
1
rotation
0
animation_rate
0
animation_loop
false
xspeed
0
yspeed
0
damping
0
t_fadein
0
5
t_still
t_fadein
0
5
t_fadeout
t_still
0
5
name
"AI
Pawn"
team
noone
trainer_index
0
trainer_id
irandom
1
16
1
party
ds_list_create
battle_input_script
battle_input_ai
This
is
a
sprite
that's
supposed
to
get
set
based
on
the
result
of
get_class_battle_sprite
get_trainer_class
get_trainer
trainer_id
class
battle_sprite
battle_sprite
spr_ethan_back
it's
probably
a
good
idea
to
iterate
over
the
party
and
destroy
its
contents
also
ds_list_destroy
party
event_inherited
name
"AI
Pawn"
event_inherited
name
"Player
Pawn"
battle_input_script
battle_input_player
battle_sprite
ClassBattleSprites
PLAYER
money
500
event_inherited
name
"Wild
Pawn"
ai
0
reward
0
this
is
sadly
less
singleton
than
other
things
because
it's
going
to
get
deactivated
but
you
can
still
try
singleton
battle
instance_create
0
0
SettingsBattle
this
is
sadly
less
singleton
than
other
things
because
it's
going
to
get
deactivated
but
you
can
still
try
singleton
use_scaled_exp
true
battle_style_shift
true
essential
variables
that
all
things
need
to
have
name
""
summary
""
pbs_internal_name
""
more
misc
constants
singleton
var
f
file_text_open_write
LOG_FILE
file_text_close
f
message_text
""
message_text_t
0
message_wait
0
message_continue_after_wait
false
message_options
ds_list_create
message_option_ids
ds_list_create
It
makes
all
the
sense
in
the
world
for
this
to
be
a
property
of
Battle
since
at
least
for
now
these
variables
are
used
in
relation
to
that
but
later
on
we're
going
to
need
them
for
dialogue
cutscenes
and
stuff
probably
and
I
don't
want
to
have
two
systems
that
do
the
exact
same
thing
message_option_index
0
This
is
supposed
to
be
the
"id"
stored
in
message_option_ids
but
you're
allowed
to
hijack
it
for
other
purposes
message_option_result
1
var
t0
get_timer
pawn
stuff
all_class_battle_bgm
const_class_battle_bgm
all_class_victory_bgm
const_class_victory_bgm
all_class_intro_me
const_class_intro_me
all_class_battle_sprites
const_class_battle_sprites
core
stuff
all_evolution_methods
const_evolution_methods
dependencies
nothing
all_egg_groups
const_egg_groups
dependencies
nothing
all_item_pockets
const_item_pockets
dependencies
nothing
all_natures
const_natures
dependencies
nothing
all_types
pbs_read_types
"
\data\pbs\types
txt"
dependencies
nothing
all_abilities
pbs_read_abilities
"
\data\pbs\abilities
txt"
dependencies
nothing
all_moves
pbs_read_moves
"
\data\pbs\moves
txt"
dependencies
types
all_items
pbs_read_items
"
\data\pbs\items
txt"
dependencies
moves
all_pokemon
pbs_read_pokemon
"
\data\pbs\monsters
txt"
dependencies
moves
types
evolutions
items
abilities
all_trainer_classes
pbs_read_trainer_classes
"
\data\pbs\trainertypes
txt"
dependencies
pawn
stuff
all_trainers
pbs_read_trainers
"
\data\pbs\trainers
txt"
dependencies
natures
abilities
moves
items
pokémon
trainer
classes
debug
"data
init
took
"
string
get_timer
t0
MILLION
"
seconds"
color
values
came
from
bulbapedia
all_types
Types
NORMAL
color
$A8A878
all_types
Types
FIGHTING
color
$C03028
all_types
Types
FLYING
color
$A890F0
all_types
Types
POISON
color
$A040A0
all_types
Types
GROUND
color
$E0C068
all_types
Types
ROCK
color
$B8A038
all_types
Types
GHOST
color
$A8B820
all_types
Types
STEEL
color
$705898
all_types
Types
FIRE
color
$B8B8D0
all_types
Types
WATER
color
$F08030
all_types
Types
GRASS
color
$6890F0
all_types
Types
ELECTRIC
color
$78C850
all_types
Types
PSYCHIC
color
$F8D030
all_types
Types
ICE
color
$F85888
all_types
Types
DRAGON
color
$98D8D8
all_types
Types
DARK
color
$705848
all_types
Types
FAIRY
color
$EE99AC
fairy
not
implemented
in
the
pbs
but
you
can
add
it
if
you
want
all_types
Types
QMARKS
color
$68A090
This
will
fork
off
a
couple
different
settings
objects
controls
battle
graphics
audio
maybe
a
few
other
things
settings
instance_create
0
0
Settings
finish
up
the
init
stuff
dt
0
instance_deactivate_object
Struct
instance_deactivate_object
Settings
these
may
be
generated
on
the
fly
as
the
player
runs
into
random
encounters
so
you'll
have
to
deactivate
them
there
also
instance_deactivate_object
BattlePokemon
more
misc
constants
and
enums
enum
vec2
xx
yy
enum
vec3
xx
yy
zz
enum
vec4
r
g
b
a
dt
delta_time
1000000
UI
stuff
draw_surface
application_surface
0
0
with
Effect
script_execute
render
var
text_box_start_x
0
var
text_box_start_y
room_height
UI_TEXT_BOX_HEIGHT
draw_rectangle_9s
spr_window9s_hgss
text_box_start_x
text_box_start_y
UI_TEXT_BOX_WIDTH
UI_TEXT_BOX_HEIGHT
draw_set_font
FPokemonMedium
draw_set_halign
fa_left
draw_set_valign
fa_top
draw_set_color
c_black
var
message_length
string_length
message_text
var
option_max_n
ds_list_size
message_options
draw_text_ext
text_box_start_x
UI_TEXT_BOX_OFFSET_W
text_box_start_y
UI_TEXT_BOX_OFFSET_H
string_copy
message_text
1
message_text_t
1
UI_TEXT_WIDTH
for
var
i
0
i
ds_list_size
Battle
drawables
i
with
Battle
drawables
i
hud
bg_draw_hud
message_text_t
min
message_length
message_text_t
ALL
INPUT
GOES
BELOW
THIS
LINE
if
message_wait
0
var
input_has_been_processed
false
if
message_text_t
message_length
multiple
choice
things
if
option_max_n
0
draw_menu_from_list
message_options
message_option_index
among
other
things
this
probably
needs
to
have
a
period
of
one
second
instead
of
two
and
probably
should
be
placed
underneath
the
final
line
of
text
or
at
the
end
of
it
if
current_second
2
0
draw_sprite_ext
spr_select
0
room_width
2
UI_TEXT_BOX_OFFSET_W
room_height
2
UI_TEXT_BOX_OFFSET_H
2
2
270
c_white
1
in
some
circumstances
input_processing
can
be
reset
in
the
battle
input
processing
script
which
will
cause
both
input
processing
parts
of
this
code
to
execute
which
isn't
supposed
to
happen
to
solve
that
we
save
the
state
of
that
variable
before
we
do
anything
to
it
input_has_been_processed
Battle
input_processing
noone
if
input_has_been_processed
battle_input_processing
Game
Maker
gurus
do
not
like
game
logic
in
the
Draw
event
I
do
not
like
Game
Maker
gurus
Actually
yes
I
do
But
I
don't
like
their
stance
on
game
logic
in
the
Draw
event
at
least
not
when
there's
only
one
active
view
In
libgdx
and
probably
some
other
frameworks
engines
they're
basically
the
same
thing
By
the
way
don't
use
more
than
one
view
in
this
game
unless
you
have
a
really
good
idea
about
what
you're
doing
you'll
most
probably
break
things
if
Battle
input_ready
if
input
processing
is
going
on
the
action
button
is
handled
in
the
script
that
draws
the
options
on
the
screen
'cause
i'm
a
good
engineer
if
input_has_been_processed
if
keyboard_check_released
vk_enter
if
message_text_t
message_length
message_text_t
message_length
else
if
ds_list_size
message_options
0
message_option_result
message_option_ids
message_option_index
else
message_option_result
1
clear
battle_advance
else
message_option_index
menu_input
message_option_index
option_max_n
else
I'm
PRETTY
sure
this
is
going
to
end
up
being
like
animation
effects
and
stuff
If
it
does
it
should
be
removed
from
the
root
if
else
entirely
becuase
you'll
want
it
to
be
executing
continuously
battle_process
else
message_wait
max
message_wait
dt
0
if
message_wait
0
message_continue_after_wait
message_continue_after_wait
false
battle_advance
render
null
image_speed
0
t
0
event_inherited
3D
stuff
xrot
0
yrot
0
direction
0
scale
1
2D
stuff
alpha
1
color
c_white
xscale
1
yscale
1
rotation
0
animation_rate
0
animation_loop
false
xspeed
0
yspeed
0
zspeed
0
damping
0
timing
stuff
t_fadein
0
5
t_still
t_fadein
0
5
t_fadeout
t_still
0
5
if
this
goes
anywhere
throw
this
behind
a
loading
screen
show_debug_overlay
true
application_surface_draw_enable
false
draw_set_alpha_test
true
var
s
32
global
model_floor
d3d_model_create
d3d_model_primitive_begin
global
model_floor
pr_trianglelist
for
var
i
0
i
BATTLEFIELD_SIZE
i
i
s
for
var
j
0
j
BATTLEFIELD_SIZE
j
j
s
d3d_model_vertex_normal_texture
global
model_floor
i
j
0
0
0
1
0
0
d3d_model_vertex_normal_texture
global
model_floor
i
s
j
0
0
0
1
1
0
d3d_model_vertex_normal_texture
global
model_floor
i
s
j
s
0
0
0
1
1
1
d3d_model_vertex_normal_texture
global
model_floor
i
s
j
s
0
0
0
1
1
1
d3d_model_vertex_normal_texture
global
model_floor
i
j
s
0
0
0
1
0
1
d3d_model_vertex_normal_texture
global
model_floor
i
j
0
0
0
1
0
0
d3d_model_primitive_end
global
model_floor
end
setup
room_goto
main
show_message
"this
is
a
piece
of
creation
code"


var
n
x


double
action_priority
BattleExecutableAction
Components
whole
number
move
action
priority
fractional
part
speed
var
n
0
var
f
0
switch
argument0
action
case
BattleActions
IDLE
return
0
case
BattleActions
MOVE
n
get_move
argument0
value
priority
break
case
BattleActions
SWITCH
n
20
break
case
BattleActions
ITEM
n
21
break
case
BattleActions
FLEE
n
22
break
add
a
random
amount
of
floating
point
between
0
25
and
0
25
to
account
for
speed
ties
the
range
of
possible
numerical
speeds
is
about
between
1
and
3
000
so
dividing
the
result
by
10
000
should
be
a
pretty
safe
way
to
"normalize"
it
to
a
decimalf
math_mod
argument0
user
Stats
SPEED
random_range
0
25
0
25
10000
return
n
f
DataAbility
add_ability
name
script
summary
internal
name
there
may
be
some
move
flags
and
stuff
added
laterwith
instance_create
0
0
DataAbility
name
argument0
script
argument1
summary
argument2
pbs_internal_name
argument3
return
id
BattleExecutableAction
add_battle_executable_action
action
user
target
type
targets
value
with
instance_create
0
0
BattleExecutableAction
action
argument0
user
argument1
target_type
argument2
targets
argument3
value
argument4
return
id
BattleIndividualAction
add_battle_individual_action
script
param0
paramn
with
instance_create
0
0
BattleIndividualAction
script
argument
0
for
var
i
1
i
argument_count
i
ds_list_add
params
argument
i
return
id
BattleRoundAction
add_battle_round_action
script
param0
paramn
with
instance_create
0
0
BattleRoundAction
script
argument
0
for
var
i
1
i
argument_count
i
ds_list_add
params
argument
i
return
id
DataEggGroup
add_egg_group
name
restricted
unrestricted
with
instance_create
0
0
DataEggGroup
name
argument0
restricted
argument1
unrestricted
argument2
return
id
void
add_evolution
target
type
value
with
instance_create
0
0
DataEvolution
target
argument0
value
argument2
if
is_real
argument1
type
argument1
else
switch
string_lower
argument1
case
"happiness"
type
EvolutionMethods
HAPPINESS
break
case
"happinessday"
type
EvolutionMethods
HAPPINESSDAY
break
case
"happinessnight"
type
EvolutionMethods
HAPPINESSNIGHT
break
case
"level"
type
EvolutionMethods
LEVEL
break
case
"trade"
type
EvolutionMethods
TRADE
break
case
"tradeitem"
type
EvolutionMethods
TRADEITEM
break
case
"item"
type
EvolutionMethods
ITEM
break
case
"attackgreater"
type
EvolutionMethods
ATTACKGREATER
break
case
"atkdefequal"
type
EvolutionMethods
ATKDEFEQUAL
break
case
"defensegreater"
type
EvolutionMethods
DEFENSEGREATER
break
case
"silcoon"
type
EvolutionMethods
SILCOON
break
case
"cascoon"
type
EvolutionMethods
CASCOON
break
case
"ninjask"
type
EvolutionMethods
NINJASK
break
case
"shedinja"
type
EvolutionMethods
SHEDINJA
break
case
"beauty"
type
EvolutionMethods
BEAUTY
break
case
"itemmale"
type
EvolutionMethods
ITEMMALE
break
case
"itemfemale"
type
EvolutionMethods
ITEMFEMALE
break
case
"dayholditem"
type
EvolutionMethods
DAYHOLDITEM
break
case
"nightholditem"
type
EvolutionMethods
NIGHTHOLDITEM
break
case
"hasmove"
type
EvolutionMethods
HASMOVE
break
case
"hasinparty"
type
EvolutionMethods
HASINPARTY
break
case
"levelmale"
type
EvolutionMethods
LEVELMALE
break
case
"levelfemale"
type
EvolutionMethods
LEVELFEMALE
break
case
"location"
type
EvolutionMethods
LOCATION
break
case
"tradespecies"
type
EvolutionMethods
TRADESPECIES
break
case
"levelday"
type
EvolutionMethods
LEVELDAY
break
case
"levelnight"
type
EvolutionMethods
LEVELNIGHT
break
case
"leveldarkinparty"
type
EvolutionMethods
LEVELDARKINPARTY
break
case
"levelrain"
type
EvolutionMethods
LEVELRAIN
break
case
"happinessmovetype"
type
EvolutionMethods
HAPPINESSMOVETYPE
break
return
id
void
add_evolution_method
name
script
pbs
internal
name
with
instance_create
0
0
DataEvolutionMethod
name
argument0
script
argument1
pbs_internal_name
argument2
return
id
void
add_individual_evolution
target
type
value
with
instance_create
0
0
DataIndividualEvolution
target
argument0
type
argument1
value
argument2
return
id
DataItem
add_item
name
plural
pocket
price
overworld
battle
spcial
value
summary
internal
name
with
instance_create
0
0
DataItem
name
argument0
plural
argument1
pocket
argument2
price
argument3
overworld
argument4
battle
argument5
special
argument6
value
argument7
summary
argument8
pbs_internal_name
argument9
return
id
DataItemPocket
add_item_pocket
name
color
icon
sound
effect
with
instance_create
0
0
DataItemPocket
name
argument0
color
argument1
icon
argument2
se
argument3
return
id
DataMove
add_move
name
type
category
pp
power
accuracy
priority
target
description
animation
effects
effect
odds
internal
name
there
may
be
some
move
flags
and
stuff
added
laterwith
instance_create
0
0
DataMove
name
argument
0
type
argument
1
category
argument
2
pp
argument
3
value
argument
4
accuracy
argument
5
priority
argument
6
target
argument
7
summary
argument
8
animation
argument
9
var
array
argument
10
var
array_odds
argument
11
for
var
i
0
i
array_length_1d
array
i
ds_list_add
effects
array
i
ds_list_add
effect_odds
array_odds
i
pbs_internal_name
argument
12
return
id
DataMove
add_move
name
hp
atk
def
spam
spd
spe
if
you
want
to
do
like
contest
stats
or
something
you
might
want
to
modify
this
scriptwith
instance_create
0
0
DataNature
name
argument
0
game
maker
doesn't
like
you
using
the
argument
array
like
this
apparently
array_copy
affects
0
argument
1
6
for
var
i
0
i
6
i
affects
i
argument
i
1
return
id
DataPokemon
add_pokemon
name
types
base
stats
gender
rate
growth
rate
base
exp
ev
rewards
catch
rate
happiness
abilities
hidden
abilities
moves
egg
moves
egg
groups
egg
steps
height
weight
color
shape
habitat
regional
indices
kind
evolutions
wild
item
distribution
form
name
incense
summary
pbs
internal
name
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27with
instance_create
0
0
DataPokemon
name
argument
0
var
arr
argument
1
for
var
i
0
i
array_length_1d
arr
i
ds_list_add
types
arr
i
arr
argument
2
for
var
i
0
i
array_length_1d
arr
i
base_stat
i
arr
i
gender
argument
3
growth_rate
argument
4
reward_exp
argument
5
arr
argument
6
for
var
i
0
i
array_length_1d
arr
i
reward_ev
i
arr
i
catch_rate
argument
7
happiness
argument
8
arr
argument
9
for
var
i
0
i
array_length_1d
arr
i
ds_list_add
abilities
arr
i
arr
argument
10
for
var
i
0
i
array_length_1d
arr
i
ds_list_add
hidden_abilities
arr
i
this
needs
to
be
a
2D
array
of
n
move
index
and
n
move
level
arr
argument
11
for
var
i
0
i
array_height_2d
arr
i
ds_list_add
moves
arr
i
0
ds_list_add
move_levels
arr
i
1
arr
argument
12
for
var
i
0
i
array_length_1d
arr
i
ds_list_add
egg_moves
arr
i
arr
argument
13
for
var
i
0
i
array_length_1d
arr
i
ds_list_add
egg_groups
arr
i
egg_steps
argument
14
height
argument
15
weight
argument
16
color
argument
17
shape
argument
18
habitat
argument
19
arr
argument
20
for
var
i
0
i
array_length_1d
arr
i
ds_list_add
indices
arr
i
kind
argument
21
similar
to
moves
this
needs
to
be
a
2D
array
of
n
target
n
type
n
parameter
this
will
most
likely
never
be
called
from
the
pbs
script
because
you
need
to
have
the
targets
defiend
first
which
the
pbs
does
notarr
argument
22
add_pokemon_add_evolutions
self
arr
this
overwrites
the
other
array
but
that's
okay
because
garbate
collection
probablywild_items
argument
23
ideally
you
don't
change
theseform_name
argument
24
forms
argument
24
id
incense
argument
25
summary
argument
26
pbs_internal_name
argument
27
return
id
void
add_pokemon_add_evolutions
DataPokemon
array
we
use
noone
instead
of
an
empty
array
because
creating
an
empty
2D
array
is
hard
if
argument1
noone
for
var
i
0
i
array_height_2d
argument1
i
ds_list_add
argument0
evolutions
add_individual_evolution
argument1
i
0
argument1
i
1
argument1
i
2
DataTrainer
add_trainer
name
class
version
items
party
with
instance_create
0
0
DataTrainer
name
argument
0
class
argument
1
version
argument
2
var
item_array
argument
3
for
var
i
0
i
array_length_1d
item_array
i
ds_list_add
items
item_array
i
var
party_array
argument
4
for
var
i
0
i
array_length_1d
party_array
i
ds_list_add
party
party_array
i
return
id
DataMove
add_move
name
reward
battle
bgm
victory
bgm
intro
me
ai
ai
notes
internal
name
there
may
be
some
move
flags
and
stuff
added
laterwith
instance_create
0
0
DataTrainerClass
name
argument0
reward
argument1
audio_battle
argument2
audio_victory
argument3
audio_intro
argument4
ai
argument5
for
var
i
0
i
array_length_1d
argument6
i
ds_list_add
ai_notes
argument6
i
pbs_internal_name
argument7
return
id
BattlePokemon
add_trainer_pokemon
species
level
name
moves
hold
item
ability
gender
form
shiny
nature
ivs
evs
happiness
name
shadow
ball
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15with
instance_create
0
0
BattlePokemon
var
base
get_pokemon
argument
0
name
base
name
species
argument
0
experience
get_experience
argument
1
base
growth_rate
We
determine
the
moves
here
because
they
might
get
overwritten
depending
on
what
arguments
you
get
pokemon_auto_moves
id
some
other
default
settings
that
are
based
upon
the
speciesdefault_ability
irandom
ds_list_size
base
abilities
1
ability
get_ability
default_ability
happiness
base
happiness
if
base
gender
1
gender
Genders
GENDERLESS
else
if
random
1
base
gender
gender
Genders
FEMALE
else
gender
Genders
MALE
switch
argument_count
case
16
ball_type
argument
15
case
15
shadow
argument
14
case
14
name
argument
13
case
13
happiness
argument
12
there
is
no
bounds
checking
on
ivs
evs
if
you
assign
an
array
of
size
say
4
and
later
the
game
crashes
when
you
try
to
access
array
5
that's
your
problem
case
12
evs
argument
11
case
11
ivs
argument
10
case
10
nature
argument
9
case
9
shiny
argument
8
case
8
form
argument
7
case
7
gender
argument
6
case
6
item
argument
5
case
5
you
can
pass
2
as
the
ability
parameter
to
select
a
random
hidden
ability
if
the
base
pokémon
has
oneif
argument
4
1
default_ability
irandom
ds_list_size
base
abilities
1
ability
get_ability
base
abilities
default_ability
else
if
argument
4
2
default_ability
irandom
ds_list_size
base
hidden_abilities
1
ability
get_ability
base
hidden_abilities
default_ability
else
default_ability
argument
4
if
argument
4
ds_list_size
base
abilities
ability
base
abilities
argument
4
no
bounds
checking
on
hidden
abilities
once
again
if
this
crashes
the
game
that's
your
problem
else
ability
base
hidden_abilities
argument
4
ds_list_size
base
abilities
case
4
var
move_array
argument
3
var
n
min
array_length_1d
move_array
MOVE_LIMIT
loop
through
the
move
array
if
any
of
them
are
valid
moves
assign
the
move
array
to
the
pokémon
and
that's
that
for
var
i
0
i
n
i
if
move_array
i
1
array_clear
moves
1
this
isn't
actually
a
nested
loop
since
the
outer
one
terminates
after
the
inner
one
runsfor
var
k
0
k
n
k
pokemon_teach_move
id
move_array
k
k
break
case
3
name
argument
2
break
but
calculate
the
stats
down
here
because
they
depend
on
the
IVs
EVs
that
might
get
passed
in
pokemon_auto_stats
id
heal
id
return
id
DataType
add_type
name
is
special
color
total
types
pbs
internal
name
with
instance_create
0
0
DataType
name
argument0
special
argument1
color
argument2
on
array_create
argument3
array_clear
on
1
pbs_internal_name
argument4
return
id
boolean
alive
BattlePokemon
return
argument0
act_hp
0
double
approach
initial
target
amount
I
wrote
this
script
later
on
and
didn't
retroactively
add
it
to
existing
code
There
are
a
few
places
particularly
animations
that
use
delta
time
that
could
benefit
it
to
make
the
code
shorter
but
don't
if
argument0
argument1
return
argument0
else
if
argument0
argument1
return
max
argument0
argument2
argument1
else
return
min
argument0
argument2
argument1
void
array_clear
array
value
for
var
i
0
i
array_length_1d
argument0
i
argument0
i
argument1
void
array_clear_2d
array
value
for
var
i
0
i
array_height_2d
argument0
i
for
var
j
0
j
array_length_2d
argument0
i
j
argument0
i
j
argument1
array_compose
argument0
argument1
sigh
return
array_copy
array
0
argument
0
argument_count
var
array
array_create
argument_count
for
var
i
0
i
argument_count
i
array
i
argument
i
return
array
void
array_swap
array
a
b
var
t
argument0
argument1
argument0
argument1
argument0
argument2
argument0
argument2
t
void
attach_pokemon_to_trainer
DataTrainer
BattlePokemon
position
var
position
ds_list_size
argument
0
party
switch
argument_count
case
3
position
argument
2
argument
1
trainer
argument
0
if
position
ds_list_size
argument
0
party
ds_list_insert
argument
0
party
position
argument
1
else
ds_list_add
argument
0
party
argument
1
switch
Battle
stage
case
BattleStages
BEGIN
battle_advance_begin
break
case
BattleStages
LOOP
battle_advance_loop
break
case
BattleStages
END
battle_advance_end
break
for
var
i
0
i
ds_list_size
contestants
i
if
contestants
i
noone
alive
contestants
i
ds_queue_enqueue
round_actions
add_battle_round_action
battle_round_action_check_contestant
i
This
checks
to
see
if
you
decided
to
switch
any
of
your
Pokémon
before
a
foe
sends
in
a
new
Pokémon
Foes
can't
do
this
to
you
but
it
would
theoretically
work
for
them
too
for
var
i
0
i
ds_list_size
replacements
i
if
replacements
i
noone
This
is
the
wrong
kind
of
action
but
we
can
get
away
with
using
it
here
because
it
doesn't
do
anything
specific
ds_queue_enqueue
round_actions
add_battle_round_action
battle_individual_action_text
Battle
contestants
i
name
"
come
back
"
ds_queue_enqueue
round_actions
add_battle_round_action
battle_round_action_anim_retract_contestant
i
ds_queue_enqueue
round_actions
add_battle_round_action
battle_round_action_change_contestant
i
And
again
ds_queue_enqueue
round_actions
add_battle_round_action
battle_individual_action_wait
0
25
true
And
again
ds_queue_enqueue
round_actions
add_battle_round_action
battle_individual_action_text
"Go
"
Battle
teams
i
owner
party
Battle
replacements
i
name
"
"
ds_queue_enqueue
round_actions
add_battle_round_action
battle_round_action_anim_submit_contestant
i
next
make
the
hp
bars
retract
anchor
onto
the
right
pokémon
and
reappearafter
that
you
should
probably
make
foe
switching
replacement
work
sincethat
was
the
goal
to
begin
with
switch
Battle
result
case
BattleStatus
CONTINUE
message
"congratulations
you
broke
the
battle
loop"
break
case
BattleStatus
WIN
var
fade_time
0
5
var
victorious
noone
var
losers
ds_list_create
for
var
i
0
i
ds_list_size
Battle
teams
i
for
var
j
0
j
ds_list_size
Battle
teams
i
owner
party
j
if
alive
Battle
teams
i
owner
party
j
victorious
Battle
teams
i
owner
continue
if
victorious
Battle
teams
i
owner
ds_list_add
losers
Battle
teams
i
owner
var
loser_names
""
for
var
i
0
i
ds_list_size
losers
i
loser_names
loser_names
losers
i
name
if
i
ds_list_size
losers
2
loser_names
loser_names
"
"
else
if
i
ds_list_size
losers
1
loser_names
loser_names
"
and
"
ds_queue_enqueue
Battle
round_actions
add_battle_round_action
battle_round_action_text
victorious
name
"
has
defeated
"
loser_names
"
"
if
victorious
Camera
battle_pawn
var
reward
0
for
var
i
0
i
ds_list_size
losers
i
reward
reward
get_prize_money
losers
i
ds_queue_enqueue
Battle
round_actions
add_battle_round_action
battle_round_action_text
"Was
given
$"
string
reward
"
as
prize
money
"
todo
if
not
wild
pokémon
trainer
s
move
back
on
screen
and
display
their
"lose"
textds_queue_enqueue
Battle
round_actions
add_battle_round_action
battle_fade
c_black
fade_time
0
ds_queue_enqueue
Battle
round_actions
add_battle_round_action
battle_end
true
else
var
reward
min
Camera
battle_pawn
money
get_prize_money
Camera
battle_pawn
you
can't
go
into
debt
unless
you
want
to
implement
a
hard
mode
or
somethingif
reward
0
i
don't
like
instanceof
but
the
alternative
would
be
writing
a
lot
of
code
most
of
which
will
probably
never
be
usedif
instanceof
victorious
PawnWild
var
loss_message
Camera
battle_pawn
name
"
dropped
$"
string
reward
"
in
panic
"
else
var
loss_message
Camera
battle_pawn
name
"
handed
out
$"
string
reward
"
to
the
winner
"
ds_queue_enqueue
Battle
round_actions
add_battle_round_action
battle_round_action_text
loss_message
Camera
battle_pawn
money
Camera
battle_pawn
money
reward
todo
if
not
wild
pokémon
trainer
s
move
back
on
screen
and
display
their
"win"
textds_queue_enqueue
Battle
round_actions
add_battle_round_action
battle_round_action_text
Camera
battle_pawn
name
"
zonked
out
"
ds_queue_enqueue
Battle
round_actions
add_battle_round_action
battle_fade
c_black
fade_time
0
ds_queue_enqueue
Battle
round_actions
add_battle_round_action
battle_end
false
break
case
BattleStatus
DRAW
ds_queue_enqueue
Battle
round_actions
add_battle_round_action
battle_round_action_text
"The
battle
ended
in
a
draw
"
break
Battle
result
battle_status
while
ds_priority_empty
priority
ds_queue_enqueue
round_actions
add_battle_round_action
battle_round_action_execute
ds_priority_delete_max
priority
for
var
i
0
i
ds_list_size
teams
i
if
team_alive
Battle
teams
i
ds_queue_enqueue
round_actions
add_battle_round_action
battle_round_action_input
i
for
var
i
0
i
ds_list_size
teams
i
ds_queue_enqueue
round_actions
add_battle_round_action
battle_round_action_anim_trainer_intro
i
ds_queue_enqueue
round_actions
add_battle_round_action
battle_round_action_anim_retract_trainer
i
ds_queue_enqueue
round_actions
add_battle_round_action
battle_round_action_send_in_leads
i
ds_queue_enqueue
round_actions
add_battle_round_action
battle_round_action_anim_send_in_pokemon_walking
i
ds_queue_enqueue
round_actions
add_battle_round_action
battle_round_action_anim_send_in_pokemon_hud
i
todo
in
multi
battles
non
lead
pokémon
should
be
sent
in
via
poké
ball
void
battle_add_drawable_and_hud
Pawn
x
y
direction
sprite
side
offscreen
distance
fade
time
hud
offscreen
x
hud
offscreen
y
var
drawable
instance_create
argument1
argument2
BattleDrawable
drawable
sprite_index
argument0
battle_sprite
this
is
so
it
knows
which
way
to
animatedrawable
direction
argument3
this
is
the
position
in
the
world
where
the
battler
is
positioneddrawable
battle_x
argument1
drawable
battle_y
argument2
this
is
where
trainers
and
pokémon
slide
in
and
out
fromdrawable
distance
argument5
drawable
offscreen_x
argument1
drawable
distance
dcos
argument3
90
drawable
offscreen_y
argument2
drawable
distance
dsin
argument3
90
it's
more
important
for
opponents
to
fade
in
and
out
than
the
playerdrawable
fade_time
argument6
drawable
center_direction
point_direction
argument1
argument2
BATTLEFIELD_SIZE
2
BATTLEFIELD_SIZE
2
var
hud
instance_create
argument7
argument8
BattleHUD
hud
offscreen_x
argument7
hud
offscreen_y
argument8
if
argument7
room_width
2
hud
battle_x
argument7
UI_BATTLE_HUD_WIDTH
UI_BATTLE_HUD_BUFFER_X
else
hud
battle_x
argument7
UI_BATTLE_HUD_WIDTH
UI_BATTLE_HUD_BUFFER_X
hud
battle_y
hud
offscreen_y
void
battle_add_position
Pawn
x
y
direction
offscreen
distance
fade
time
hud
offscreen
x
hud
offscreen
y
with
instance_create
argument1
argument2
BattleDrawable
owner
argument0
sprite_index
argument0
battle_sprite
this
is
so
it
knows
which
way
to
animatedirection
argument3
this
is
the
position
in
the
world
where
the
battler
is
positionedbattle_x
argument1
battle_y
argument2
this
is
where
trainers
and
pokémon
slide
in
and
out
fromdistance
argument4
offscreen_x
argument1
distance
dcos
argument3
90
offscreen_y
argument2
distance
dsin
argument3
90
it's
more
important
for
opponents
to
fade
in
and
out
than
the
playerfade_time
argument5
center_direction
point_direction
argument1
argument2
BATTLEFIELD_SIZE
2
BATTLEFIELD_SIZE
2
hud
instance_create
argument6
argument7
BattleHUD
hud
offscreen_x
argument6
hud
offscreen_y
argument7
if
argument6
room_width
2
hud
battle_x
argument6
UI_BATTLE_HUD_WIDTH
UI_BATTLE_HUD_BUFFER_X
else
hud
battle_x
argument6
UI_BATTLE_HUD_WIDTH
UI_BATTLE_HUD_BUFFER_X
hud
battle_y
hud
offscreen_y
return
id
BattleTeam
battle_add_team
Pawn
SpriteSide
with
instance_create
0
0
BattleTeam
owner
argument0
name
owner
name
"'s
Team"
sprite_side
argument1
argument0
team
id
return
id
with
Battle
if
the
action
queues
are
emptyif
battle_continue
if
there
are
no
things
queued
up
add
some
things
each
of
the
scripts
in
this
switch
tree
ought
to
continue
on
their
ownswitch
stage
case
BattleStages
BEGIN
battle_begin_loop
break
case
BattleStages
LOOP
if
Battle
result
BattleStatus
CONTINUE
battle_begin_loop
else
battle_begin_end
battle_begin_end
break
case
BattleStages
END
return
to
game
probablybreak
stage
BattleStages
BEGIN
for
var
i
0
i
ds_list_size
teams
i
for
var
j
0
j
ds_list_size
teams
i
owner
party
j
pokemon_reset_stat_mods
teams
i
owner
party
j
teams
i
owner
party
j
owner
teams
i
owner
ds_queue_enqueue
actions
battle_action_send_in_leads
message
"The
battle
has
started
"
control
returns
to
the
ui
prompt
if
ds_queue_empty
actions
script_execute
ds_queue_dequeue
actions
stage
BattleStages
LOOP
stage_loop
BattleLoopStages
CHOOSE_MOVE
stage
BattleStages
END
ds_queue_enqueue
actions
battle_action_conclude
battle_advance
if
ds_queue_empty
individual_actions
var
action
ds_queue_dequeue
individual_actions
script_execute
action
script
action
params
with
action
instance_destroy
stage
BattleStages
LOOP
ds_queue_enqueue
actions
battle_action_check_contestants
ds_queue_enqueue
actions
battle_action_check_replacements_before_turn
ds_queue_enqueue
actions
battle_action_input
ds_queue_enqueue
actions
battle_action_execute
ds_queue_enqueue
actions
battle_action_evaluate
battle_advance
if
ds_queue_empty
round_actions
var
action
ds_queue_dequeue
round_actions
script_execute
action
script
action
params
with
action
instance_destroy
boolean
battle_continue
Returns
true
if
it
executed
something
false
if
it
did
not
if
ds_queue_empty
individual_actions
battle_begin_individual_action
return
true
else
if
ds_queue_empty
round_actions
this
may
do
other
things
but
it
may
also
just
populate
the
individual
actionsbattle_begin_round_action
return
true
else
if
ds_queue_empty
actions
this
exists
to
populate
the
round
actionsbattle_begin_action
battle_advance
return
true
return
false
int
battle_damage
move
user
target
critical
var
move
argument0
var
user
argument1
var
target
argument2
todo
sort
these
outvar
mod_targets
1
var
mod_weather
1
var
mod_badge
1
var
mod_critical
1
var
mod_random
random_range
0
85
1
var
mod_stab
1
var
mod_type
get_matchup_on
move
type
target
var
mod_burn
1
var
mod_other
1
no
need
to
waste
time
with
fancy
arithmetic
you
may
want
to
do
this
with
some
of
the
other
mods
as
well
if
mod_type
0
return
0
todo
abilities
such
as
Huge
Power
Rivalry
etcif
argument3
todo
sniper
increases
critical
hit
damage
and
maybe
some
other
thingsmod_critical
2
var
cat_offense
cat_defense
var
offense
defense
offense_mod
defense_mod
switch
move
category
case
MoveCategories
PHYSICAL
cat_offense
Stats
ATTACK
cat_defense
Stats
DEFENSE
break
case
MoveCategories
SPECIAL
cat_offense
Stats
SPATTACK
cat_defense
Stats
SPDEFENSE
break
case
MoveCategories
PHYSICAL_ATK_SPECIAL_DEF
cat_offense
Stats
ATTACK
cat_defense
Stats
SPDEFENSE
break
case
MoveCategories
SPECIAL_ATK_PHYSICAL_DEF
cat_offense
Stats
SPATTACK
cat_defense
Stats
DEFENSE
break
case
MoveCategories
STATUS
show_error
"you
somehow
managed
to
do
a
damage
calculation
on
a
status
move
good
job"
true
break
offense
user
act
cat_offense
defense
target
act
cat_defense
offense_mod
math_mod
user
cat_offense
defense_mod
math_mod
target
cat_defense
if
user
status
MajorStatus
BURN
cat_offense
Stats
ATTACK
mod_burn
0
5
var
m
offense_mod
defense_mod
mod_weather
mod_badge
mod_critical
mod_random
mod_stab
mod_type
mod_burn
mod_other
var
base
2
get_level
argument1
experience
get_pokemon
argument1
species
growth_rate
5
2
move
value
offense
defense
50
2
return
floor
base
m
10
void
battle_debug
string
This
is
the
exact
same
thing
as
regular
debug
except
the
text
isn't
echoed
to
the
game
window
and
we
pretend
the
Action
button
has
already
been
pressed
by
the
player
debug
argument0
battle_advance
void
battle_end
params
0
true
if
the
outcome
is
favoriable
false
if
it
is
notvar
params
argument0
put
all
of
the
battlers
back
to
sleep
so
that
they
don't
waste
cpu
cycles
when
the
game
returns
to
the
overworldfor
var
i
0
i
ds_list_size
Battle
teams
i
for
var
j
0
j
ds_list_size
Battle
teams
i
owner
party
j
instance_deactivate_object
Battle
teams
i
owner
party
j
continue
ideally
the
game
returns
control
to
the
overworld
after
this
is
finished
executing
for
now
we
just
end
the
gameshow_message
"That's
the
battle
loop
Hopefully
at
some
point
in
the
future
there
will
be
an
overworld
to
return
to
or
something
For
now
the
game
is
just
going
to
close
"
game_end
for
var
i
0
i
ds_list_size
contestants
i
if
contestants
i
noone
ds_queue_enqueue
subactions
void
battle_fade
params
0
color
1
time
2
starting
alphavar
params
argument0
Battle
input_ready
false
with
instance_create
0
0
BattleAnimator
user
new_effect_2d
0
0
1
e2d_overlay_monochrome
params
1
params
1
params
1
1
1
0
params
0
params
2
misc_data
"time"
params
1
misc_data
"starting"
params
2
script
ba_fade
array
battle_get_hit
move
user
targets
this
may
not
be
useful
but
it's
good
information
to
have
i
guessvar
move
argument0
var
user
argument1
var
output
array_create
ds_list_size
argument2
if
move
accuracy
0
for
var
i
0
i
ds_list_size
argument2
i
todo
fly
dig
diveoutput
i
true
else
for
var
i
0
i
ds_list_size
argument2
i
todo
fly
dig
divevar
roll
random_range
0
100
math_mod
argument1
Stats
ACCURACY
math_mod
argument2
i
Stats
EVADE
if
roll
move
accuracy
output
i
true
else
output
i
false
return
output
list
battle_get_valid_targets
user
move
index
not
all
moves
have
the
same
targeting
abilities
but
for
now
we
assume
that
they
dovar
move
get_move
argument1
var
valid_targets
ds_list_create
for
var
i
0
i
ds_list_size
Battle
contestants
i
if
Battle
contestants
i
owner
argument0
owner
ds_list_add
valid_targets
Battle
contestants
i
return
valid_targets
void
battle_individual_action_animation
params
0
user
1
target
2
move
object
var
params
argument0
void
battle_individual_action_animation_move
BattleIndividualAction
0
user
1
targets
2
move
object
var
params
argument0
Battle
input_ready
false
with
instance_create
0
0
BattleAnimator
user
params
0
target_list
params
1
script
params
2
animation
void
battle_individual_action_death
BattleIndividualAction
0
targetvar
params
argument0
Battle
input_ready
false
with
instance_create
0
0
BattleAnimator
user
Battle
drawables
params
0
position
script
ba_death
void
battle_individual_action_execute_switch_before_turn
params
This
is
messy
but
the
alternative
is
adding
a
lot
of
scripts
that
can't
communicate
with
each
other
to
the
queue
in
battle_round_action_check_contestant
I'd
rather
figure
out
the
common
data
here
and
then
set
them
up
even
if
it
means
using
the
queue
wrong
no
arguments
var
replacement
Battle
replacements
Battle
input_processing
position
var
party
Camera
battle_pawn
party
if
replacement
noone
var
replacement_index
1
for
var
i
0
i
ds_list_size
party
i
if
part
i
replacement
replacement_index
i
break
This
will
break
if
replacement
index
isn't
found
Try
not
to
let
that
happen
var
act_withdraw
add_battle_individual_action
battle_individual_action_withdraw
Battle
input_processing
position
var
act_swap
add_battle_individual_action
battle_individual_action_swap
replacement
position
replacement_index
battle_advance
void
battle_individual_action_exp_gain
BattleIndividualAction
0
user
1
initial
exp
2
exp
gainedvar
params
argument0
Battle
input_ready
false
with
instance_create
0
0
BattleAnimator
user
params
0
this
is
to
avoid
imprecision
that
may
occur
while
scrollingmisc_data
"current"
params
1
misc_data
"gain"
params
2
script
ba_exp_gain
void
battle_individual_action_level_gain
BattleIndividualAction
0
user
1
old
level
2
new
levelvar
params
argument0
var
pkmn
params
0
todo
ding
ding
ding
sound
that
plays
when
you
learn
a
new
move
or
gain
a
levelBattle
input_processing
pkmn
Battle
input_stage
BattleInputStages
LEVEL_STAT_DELTA
Battle
misc_data
"who"
params
0
Battle
misc_data
"old
level"
params
1
Battle
misc_data
"new
level"
params
2
Battle
misc_data
"old
hp"
pkmn
act
Stats
HP
Battle
misc_data
"old
atk"
pkmn
act
Stats
ATTACK
Battle
misc_data
"old
def"
pkmn
act
Stats
DEFENSE
Battle
misc_data
"old
spa"
pkmn
act
Stats
SPATTACK
Battle
misc_data
"old
spd"
pkmn
act
Stats
SPDEFENSE
Battle
misc_data
"old
spe"
pkmn
act
Stats
SPEED
automatically
jump
to
the
highest
available
levelvar
delta_hp
pkmn
act
Stats
HP
pkmn
act_hp
params
0
experience
get_experience
params
2
get_pokemon
pkmn
species
growth_rate
recalculate_all_stats
pkmn
pkmn
act_hp
pkmn
act
Stats
HP
delta_hp
Battle
misc_data
"new
hp"
pkmn
act
Stats
HP
Battle
misc_data
"new
atk"
pkmn
act
Stats
ATTACK
Battle
misc_data
"new
def"
pkmn
act
Stats
DEFENSE
Battle
misc_data
"new
spa"
pkmn
act
Stats
SPATTACK
Battle
misc_data
"new
spd"
pkmn
act
Stats
SPDEFENSE
Battle
misc_data
"new
spe"
pkmn
act
Stats
SPEED
void
battle_individual_action_question
params
0
text
this
is
a
yes
or
a
no
it
works
the
same
way
as
a
multiple
choice
but
it
presets
the
options
to
yes
and
no
var
params
argument0
question
params
0
"Yes"
0
"No"
1
void
battle_individual_action_scroll_health
BattleIndividualAction
0
target
single
1
damage
amountvar
params
argument0
Battle
input_ready
false
with
instance_create
0
0
BattleAnimator
user
params
0
this
is
to
avoid
imprecision
that
may
occur
while
scrollingmisc_data
"initial"
user
act_hp
misc_data
"amount"
params
1
script
ba_scroll_health
void
battle_individual_action_stat_change_animation
params
0
user
1
script
ba_stat_rise
or
ba_stat_fall
2
mask
sprite
3
mask
x
speed
4
mask
y
speed
5
sound
effectvar
params
argument0
Battle
input_ready
false
with
instance_create
0
0
BattleAnimator
user
Battle
drawables
params
0
position
misc_data
"mask
sprite"
params
2
misc_data
"mask
speed
x"
params
3
misc_data
"mask
speed
y"
params
4
misc_data
"sound"
params
5
script
params
1
void
battle_individual_action_stat_rise_animation
params
0
uservar
params
argument0
Battle
input_ready
false
with
instance_create
0
0
BattleAnimator
user
Battle
drawables
params
0
position
script
ba_stat_rise
void
battle_individual_action_stat_rise_animation
params
0
user
1
stat
2
valuevar
params
argument0
params
0
mods
params
1
params
2
battle_advance
void
battle_individual_action_switch
params
no
arguments
var
params
argument0
question
params
0
"Yes"
0
"No"
1
void
battle_individual_action_switch_before_turn
params
1
battlefield
slot
to
fillvar
params
argument0
var
result
World
message_option_result
World
message_option_result
1
This
looks
extremely
bizarre
since
0
is
usually
false
and
1
is
usually
true
but
in
this
case
we're
actually
checking
to
see
if
the
result
is
equal
to
zero
if
result
0
Battle
input_stage
BattleInputStages
SWITCH_BEFORE_TURN
Battle
misc_data
"contestant
slot
to
replace"
params
0
This
doesn't
serve
a
purpose
other
than
to
make
sure
the
input
processing
code
fires
since
that
part's
skipped
if
the
input
processing
variable
is
noone
Battle
input_processing
Camera
battle_pawn
message
"Who
would
you
like
to
send
in
to
replace
"
Battle
contestants
params
0
name
"
"
else
Battle
replacements
params
0
noone
battle_advance
void
battle_individual_action_text
params
0
textvar
params
argument0
message
params
0
void
battle_individual_action_wait
params
0
time
seconds
1
continue
automatically
after
wait
period
var
params
argument0
if
ds_list_size
params
1
wait
params
0
else
wait
params
0
params
1
void
battle_input_ai
team
pokemon
"calculate"
the
movevar
value
1
calculate
the
target
s
one
random
var
valid_targets
battle_get_valid_targets
argument1
value
var
targets
ds_list_create
ds_list_add
targets
valid_targets
irandom
ds_list_size
valid_targets
1
ds_list_destroy
valid_targets
put
it
all
togethervar
moveid
argument1
moves
value
battle_prioritize
add_battle_executable_action
BattleActions
MOVE
argument1
BattleTargets
OPPONENT
targets
moveid
continue
battle_debug
argument0
owner
name
"
has
chosen
the
move
"
get_move
moveid
name
"
for
"
argument1
name
void
battle_input_player
team
pokemon
var
catch
argument0
input_processing
argument1
continue
in
the
message
message
"What
will
"
argument1
name
"
do
"
switch
Battle
input_stage
case
BattleInputStages
GRAND
battle_input_processing_grand
break
case
BattleInputStages
MOVE
battle_input_processing_move
break
case
BattleInputStages
SWITCH
battle_input_processing_switch
battle_input_processing_control_switch_normal
break
case
BattleInputStages
FLEE
break
on
level
upcase
BattleInputStages
LEVEL_STAT_DELTA
battle_input_processing_level_stat_delta
break
case
BattleInputStages
LEVEL_STAT_TOTAL
battle_input_processing_level_stat_total
break
switching
before
your
opponent
sends
something
incase
BattleInputStages
SWITCH_BEFORE_TURN
battle_input_processing_switch
battle_input_processing_control_switch_before_turn
break
void
battle_input_processing_control_switch_before_turn
Of
course
you
could
not
hard
code
this
behavior
In
fact
if
you're
trying
to
make
a
custom
battle
system
I
suggest
you
do
that
But
in
the
meantime
I'm
going
to
hard
code
this
if
keyboard_check_released
vk_enter
if
World
message_option_index
ds_list_size
Camera
battle_pawn
party
battle_input_processing_reset
battle_advance
else
if
battle_is_on_field
Camera
battle_pawn
party
World
message_option_index
message
Camera
battle_pawn
party
World
message_option_index
name
"
is
already
fighting
"
else
todo
in
multi
battles
when
all
of
your
front
line
goes
down
mark
BattlePokemon
as
"selected"
when
you
choose
them
here
so
they
can't
be
sent
into
both
contestant
slots
at
the
same
time
Battle
replacements
Battle
misc_data
"contestant
slot
to
replace"
World
message_option_index
World
message_option_result
World
message_option_index
Battle
input_stage
BattleInputStages
GRAND
Battle
input_processing
noone
don't
do
this
quite
yet
battle_input_processing_reset
battle_advance
void
battle_input_processing_control_switch_normal
see
comments
in
battle_input_processing_control_switch_before_turnif
keyboard_check_released
vk_enter
if
World
message_option_index
ds_list_size
Camera
battle_pawn
party
Battle
input_stage
BattleInputStages
GRAND
World
message_option_index
0
else
if
World
message_option_index
0
message
Battle
input_processing
name
"
is
already
in
battle
"
else
var
index
World
message_option_index
var
pkmn
Battle
input_processing
battle_prioritize
add_battle_executable_action
BattleActions
SWITCH
pkmn
BattleTargets
SELF
noone
Camera
battle_pawn
party
index
battle_input_processing_reset
battle_debug
pkmn
owner
name
"
has
chosen
to
switch
to
"
Camera
battle_pawn
party
index
name
"
"
var
text_list
ds_list_create
ds_list_add
text_list
"Fight
"
"Item"
"Switch"
"Flee"
if
DEBUG
ds_list_add
text_list
"
Idle
"
var
max_n
ds_list_size
text_list
draw_menu_from_list
text_list
World
message_option_index
World
message_option_index
menu_input
World
message_option_index
max_n
if
keyboard_check_released
vk_enter
switch
World
message_option_index
case
0
Battle
input_stage
BattleInputStages
MOVE
break
case
1
Battle
input_stage
BattleInputStages
ITEM
break
case
2
Battle
input_stage
BattleInputStages
SWITCH
break
case
3
Battle
input_stage
BattleInputStages
FLEE
break
case
4
battle_prioritize
add_battle_executable_action
BattleActions
IDLE
pkmn
BattleTargets
SELF
noone
0
battle_input_processing_reset
battle_debug
pkmn
owner
name
"
has
chosen
to
idle
for
"
pkmn
name
break
ds_list_destroy
text_list
var
pkmn
Battle
misc_data
"who"
var
max_n
7
var
text_spacing
font_get_size
FPokemonMedium
1
5
var
box_width
UI_BATTLE_HUD_WIDTH
var
box_height
text_spacing
max_n
2
var
box_x
room_width
box_width
var
box_y
room_height
box_height
draw_rectangle_9s
spr_window9s_hgss
box_x
box_y
box_width
box_height
draw_set_valign
fa_middle
var
delta_hp
Battle
misc_data
"new
hp"
Battle
misc_data
"old
hp"
var
delta_atk
Battle
misc_data
"new
atk"
Battle
misc_data
"old
atk"
var
delta_def
Battle
misc_data
"new
def"
Battle
misc_data
"old
def"
var
delta_spa
Battle
misc_data
"new
spa"
Battle
misc_data
"old
spa"
var
delta_spd
Battle
misc_data
"new
spd"
Battle
misc_data
"old
spd"
var
delta_spe
Battle
misc_data
"new
spe"
Battle
misc_data
"old
spe"
draw_text
box_x
text_spacing
UI_TEXT_BOX_OFFSET_W
box_y
1
5
text_spacing
pkmn
name
"
"
string
Battle
misc_data
"new
level"
Battle
misc_data
"old
level"
draw_text
box_x
text_spacing
UI_TEXT_BOX_OFFSET_W
box_y
1
5
text_spacing
text_spacing
"
"
string
delta_hp
"
HP"
draw_text
box_x
text_spacing
UI_TEXT_BOX_OFFSET_W
box_y
1
5
text_spacing
text_spacing
2
"
"
string
delta_atk
"
Attack"
draw_text
box_x
text_spacing
UI_TEXT_BOX_OFFSET_W
box_y
1
5
text_spacing
text_spacing
3
"
"
string
delta_def
"
Defense"
draw_text
box_x
text_spacing
UI_TEXT_BOX_OFFSET_W
box_y
1
5
text_spacing
text_spacing
4
"
"
string
delta_spa
"
Sp
Attack"
draw_text
box_x
text_spacing
UI_TEXT_BOX_OFFSET_W
box_y
1
5
text_spacing
text_spacing
5
"
"
string
delta_spd
"
Sp
Defense"
draw_text
box_x
text_spacing
UI_TEXT_BOX_OFFSET_W
box_y
1
5
text_spacing
text_spacing
6
"
"
string
delta_spe
"
Speed"
if
keyboard_check_released
vk_enter
keyboard_check_released
vk_escape
Battle
input_stage
BattleInputStages
LEVEL_STAT_TOTAL
var
pkmn
Battle
misc_data
"who"
var
old_level
Battle
misc_data
"old
level"
var
new_level
Battle
misc_data
"new
level"
var
max_n
7
var
text_spacing
font_get_size
FPokemonMedium
1
5
var
box_width
UI_BATTLE_HUD_WIDTH
var
box_height
text_spacing
max_n
2
var
box_x
room_width
box_width
var
box_y
room_height
box_height
draw_rectangle_9s
spr_window9s_hgss
box_x
box_y
box_width
box_height
draw_set_valign
fa_middle
draw_text
box_x
text_spacing
UI_TEXT_BOX_OFFSET_W
box_y
1
5
text_spacing
pkmn
name
"
"
string
Battle
misc_data
"new
level"
Battle
misc_data
"old
level"
draw_text
box_x
text_spacing
UI_TEXT_BOX_OFFSET_W
box_y
1
5
text_spacing
text_spacing
string
Battle
misc_data
"new
hp"
"
HP"
draw_text
box_x
text_spacing
UI_TEXT_BOX_OFFSET_W
box_y
1
5
text_spacing
text_spacing
2
string
Battle
misc_data
"new
atk"
"
Attack"
draw_text
box_x
text_spacing
UI_TEXT_BOX_OFFSET_W
box_y
1
5
text_spacing
text_spacing
3
string
Battle
misc_data
"new
def"
"
Defense"
draw_text
box_x
text_spacing
UI_TEXT_BOX_OFFSET_W
box_y
1
5
text_spacing
text_spacing
4
string
Battle
misc_data
"new
spa"
"
Sp
Attack"
draw_text
box_x
text_spacing
UI_TEXT_BOX_OFFSET_W
box_y
1
5
text_spacing
text_spacing
5
string
Battle
misc_data
"new
spd"
"
Sp
Defense"
draw_text
box_x
text_spacing
UI_TEXT_BOX_OFFSET_W
box_y
1
5
text_spacing
text_spacing
6
string
Battle
misc_data
"new
spe"
"
Speed"
if
keyboard_check_released
vk_enter
keyboard_check_released
vk_escape
Battle
input_stage
BattleInputStages
GRAND
battle_input_processing_reset
battle_debug
pkmn
owner
name
"
has
viewed
the
stat
level
screen
for
"
pkmn
name
var
pkmn
Battle
input_processing
var
text_list
ds_list_create
this
is
silly
but
we
need
a
list
of
text
for
the
"max
width"
scriptvar
move_list
ds_list_create
for
var
i
0
i
array_length_1d
pkmn
moves
i
if
pkmn
moves
i
noone
ds_list_add
text_list
"
"
ds_list_add
move_list
noone
else
ds_list_add
text_list
get_move
pkmn
moves
i
name
ds_list_add
move_list
pkmn
moves
i
ds_list_add
move_list
noone
ds_list_add
text_list
"
Back
"
if
false
todo
move
ppvar
value
get_move_from_name
"STRUGGLE"
true
struggle
automatically
hits
a
random
adjacent
foe
if
you
want
to
change
the
move
here
you
might
want
to
un
hard
code
thisvar
valid_targets
battle_get_valid_targets
pkmn
value
var
targets
ds_list_create
ds_list_add
targets
valid_targets
irandom
ds_list_size
valid_targets
1
ds_list_destroy
valid_targets
battle_prioritize
add_battle_executable_action
BattleActions
MOVE
pkmn
BattleTargets
OPPONENT
targets
value
battle_input_processing_reset
battle_debug
pkmn
name
"
has
no
valid
moves
struggling"
else
var
max_n
ds_list_size
text_list
draw_menu_from_list
text_list
World
message_option_index
World
message_option_index
menu_input
World
message_option_index
max_n
if
keyboard_check_released
vk_escape
Battle
input_stage
BattleInputStages
GRAND
World
message_option_index
0
else
if
keyboard_check_released
vk_enter
if
World
message_option_index
MOVE_LIMIT
battle_input_processing_reset
else
if
move_list
World
message_option_index
noone
to
do
play
some
kind
of
silly
"invalid"
sound
else
var
value
move_list
World
message_option_index
at
some
point
in
the
future
this
needs
to
be
moved
to
a
different
script
that
can
account
for
selecting
multiple
valid
targetsvar
valid_targets
battle_get_valid_targets
pkmn
value
var
targets
ds_list_create
ds_list_add
targets
valid_targets
irandom
ds_list_size
valid_targets
1
ds_list_destroy
valid_targets
battle_prioritize
add_battle_executable_action
BattleActions
MOVE
pkmn
BattleTargets
OPPONENT
targets
value
battle_input_processing_reset
battle_debug
pkmn
owner
name
"
has
chosen
the
move
"
text_list
World
message_option_index
"
for
"
pkmn
name
ds_list_destroy
text_list
ds_list_destroy
move_list
Battle
input_processing
noone
Battle
input_stage
BattleInputStages
GRAND
World
message_option_index
0
void
battle_input_processing_switch
battle
input
processing
script
var
pkmn
Battle
input_processing
var
text_list
ds_list_create
for
var
i
0
i
ds_list_size
Camera
battle_pawn
party
i
ds_list_add
text_list
Camera
battle_pawn
party
i
name
ds_list_add
text_list
"Back"
var
max_n
ds_list_size
text_list
draw_menu_from_list
text_list
World
message_option_index
World
message_option_index
menu_input
World
message_option_index
max_n
if
World
message_option_index
max_n
1
todo
draw
the
summary
screen
preferably
with
stats
and
moves
visible
at
the
same
time
but
if
that's
not
an
option
a
key
to
toggle
between
them
controls
may
be
variable
depending
on
what
part
of
the
battle
is
having
you
switch
so
we
package
that
up
in
a
script
and
pass
it
as
an
argumentscript_execute
argument0
ds_list_destroy
text_list
boolean
battle_is_on_field
BattlePokemon
for
var
i
0
i
ds_list_size
Battle
contestants
i
if
Battle
contestants
i
argument0
return
true
return
false
void
battle_prioritize
BattleExecutableAction
ds_priority_add
Battle
priority
argument0
action_priority
argument0
with
Battle
switch
stage
case
BattleStages
BEGIN
battle_process_begin
break
case
BattleStages
LOOP
battle_process_loop
break
case
BattleStages
END
battle_process_end
break
Not
sure
what
goes
here
honestly
whatever
Not
sure
what
goes
here
either
honestly
void
battle_reset_stat_mods
BattlePokemon
with
argument0
recalculate_all_stats
id
for
var
i
0
i
8
i
mods
i
0
ds_list_clear
types
types
ds_list_clone
get_pokemon
species
types
flag_downed
false
void
battle_round_action_anim_retract_contestant
params
0
drawable
indexBattle
input_ready
false
with
instance_create
0
0
BattleAnimator
user
Battle
drawables
argument0
0
user
alpha
1
user
x
user
battle_x
user
y
user
battle_y
script
ba_retract_contestant
void
battle_round_action_anim_retract_trainer
params
0
drawable
indexBattle
input_ready
false
with
instance_create
0
0
BattleAnimator
user
Battle
drawables
argument0
0
user
alpha
1
user
x
user
battle_x
user
y
user
battle_y
script
ba_retract_trainer
void
battle_round_action_anim_send_in_leads
params
0
team
indexvar
team
Battle
teams
argument0
0
message
team
name
"
sent
out
"
team
owner
party
0
name
"
"
Battle
contestants
argument0
0
team
owner
party
0
void
battle_round_action_anim_send_in_pokemon
params
0
team
indexBattle
input_ready
false
with
instance_create
0
0
BattleAnimator
user
Battle
teams
argument0
0
drawable
script
ba_retract_trainer
void
battle_round_action_anim_send_in_pokemon_hud
params
0
contestant
indexBattle
input_ready
false
with
instance_create
0
0
BattleAnimator
var
team
Battle
teams
argument0
0
var
draw
Battle
drawables
argument0
0
remember
we
need
to
attach
a
pokémon
to
the
battle
hud
at
some
pointdraw
hud
user
Battle
contestants
argument0
0
user
draw
hud
user
x
user
offscreen_x
user
y
user
offscreen_y
script
ba_send_in_pokemon_hud
void
battle_round_action_anim_send_in_pokemon_walking
params
0
team
indexBattle
input_ready
false
with
instance_create
0
0
BattleAnimator
var
team
Battle
teams
argument0
0
user
Battle
drawables
argument0
0
user
alpha
0
user
sprite_index
get_pokemon_battle_sprite
Battle
contestants
argument0
0
species
team
sprite_side
user
image_index
0
user
x
user
offscreen_x
user
y
user
offscreen_y
script
ba_send_in_pokemon_walking
void
battle_round_action_anim_send_out_pokemon_hud
params
0
contestant
indexBattle
input_ready
false
with
instance_create
0
0
BattleAnimator
var
team
Battle
teams
argument0
0
var
draw
Battle
drawables
argument0
0
user
draw
hud
user
x
user
battle_x
user
y
user
battle_y
script
ba_send_out_pokemon_hud
void
battle_round_action_anim_submit_contestant
params
0
drawable
indexBattle
input_ready
false
with
instance_create
0
0
BattleAnimator
user
Battle
drawables
argument0
0
user
alpha
1
user
x
user
battle_x
user
y
user
battle_y
script
ba_submit_contestant
void
battle_round_action_anim_trainer_intro
params
0
team
indexBattle
input_ready
false
with
instance_create
0
0
BattleAnimator
user
Battle
drawables
argument0
0
user
alpha
1
user
x
user
battle_x
user
y
user
battle_y
script
ba_trainer_intro
void
battle_round_action_anim_retract_trainer
params
0
drawable
indexvar
pawn
Battle
teams
argument0
0
owner
var
contestant
Battle
contestants
argument0
0
var
index
ds_list_find_index
pawn
party
contestant
ds_list_swap
pawn
party
index
Battle
replacements
argument0
0
Battle
contestants
argument0
0
pawn
party
index
pawn
party
index
position
argument0
0
Battle
replacements
argument0
0
noone
battle_advance
void
battle_round_action_check_contestant
params
0
team
indexvar
team
Battle
teams
argument0
0
var
found
noone
todo
this
is
going
to
get
more
complicated
when
you
bring
ai
into
it
this
is
going
to
get
even
MORE
complicated
when
you
bring
Zoroark
into
it
because
you
have
to
"fool"
the
text
below
into
thinking
"found"
is
not
a
Zoroark
for
var
i
0
i
ds_list_size
team
owner
party
i
if
alive
team
owner
party
i
found
team
owner
party
i
break
var
pawn_alive
0
var
pawn_slots
0
count
the
number
of
spaces
on
the
battlefield
the
battle
pawn
hasfor
var
i
0
i
ds_list_size
Battle
teams
i
if
Battle
teams
i
owner
Camera
battle_pawn
pawn_slots
count
the
number
of
living
pokémon
the
battle
pawn
hasfor
var
i
0
i
ds_list_size
Camera
battle_pawn
party
i
if
alive
Camera
battle_pawn
party
i
pawn_alive
if
found
noone
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_text
team
name
"
has
no
more
healthy
Pokémon
"
else
if
team
owner
Camera
battle_pawn
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_text
"You
need
to
send
someone
in
We'll
get
to
that
in
a
bit
I
hope
"
else
if
you
wanted
to
do
multiplayer
which
you
do
not
you
would
need
to
bypass
this
line
actually
if
you
wanted
to
do
multiplayer
this
line
would
be
the
least
of
your
worries
if
World
settings
battle
battle_style_shift
If
I
recall
you
don't
get
asked
to
switch
in
a
double
battle
where
you
get
two
slots
on
the
field
if
pawn_alive
1
pawn_slots
1
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_question
team
name
"
is
about
to
send
out
"
found
name
"
Would
you
like
to
change
Pokémon
"
for
var
i
0
i
ds_list_size
Battle
contestants
i
if
Battle
contestants
i
owner
Camera
battle_pawn
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_switch_before_turn
i
Battle
contestants
argument0
0
found
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_text
team
name
"
sent
out
"
found
name
"
"
todo
animate
both
the
contestant
and
the
hp
bar
battle_advance
void
battle_round_action_execute
params
0
BattleExecutableActionvar
exe
argument0
0
var
pokemon
exe
user
if
pokemon
flag_downed
switch
exe
action
case
BattleActions
MOVE
var
base
get_pokemon
pokemon
species
var
move
get_move
exe
value
var
hit
battle_get_hit
move
pokemon
exe
targets
todo
check
for
flinches
or
other
conditions
which
may
invalidate
the
entire
turnds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_text
pokemon
name
"
used
"
move
name
"
"
todo
other
conditions
under
which
a
move
may
failvar
hit_count
0
for
var
i
0
i
array_length_1d
hit
i
if
hit
i
hit_count
if
hit_count
0
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_animation_move
pokemon
ds_list_clone
exe
targets
move
there
may
be
other
data
that
needs
to
go
here
at
some
point
but
i'm
pretty
sure
it
can
all
be
derived
from
this
the
fact
that
i
need
to
do
basically
the
same
thing
twice
is
upsettingfor
var
i
0
i
array_length_1d
hit
i
the
obvious
part
if
you're
marked
as
being
hit
execute
the
action
otherwise
ignore
itif
hit
i
the
less
obvious
part
if
you're
not
marked
as
being
already
fainted
execute
the
action
otherwise
ignore
itif
exe
targets
i
flag_downed
var
target_fainted
false
if
move
category
MoveCategories
STATUS
todo
sort
this
out
calculating
whether
a
hit
is
critical
or
not
remember
some
conditions
increase
critical
hit
chances
and
others
negate
them
entirely
var
matchup
get_matchup_on
move
type
exe
targets
i
if
matchup
0
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_text
"But
it
doesn't
affect
"
exe
targets
i
name
else
var
critical_hit_threshold
1
var
critical
irandom
16
critical_hit_threshold
var
damage
battle_damage
move
pokemon
exe
targets
i
critical
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_scroll_health
exe
targets
i
damage
if
array_length_1d
hit
1
var
matchup_message_postfix
"
on
"
exe
targets
i
else
var
matchup_message_postfix
""
if
matchup
1
this
could
be
compacted
a
little
but
that
would
make
potential
localization
a
little
bit
trickyif
array_length_1d
hit
1
var
matchup_message
"It's
super
effective
on
"
exe
targets
i
"
"
else
var
matchup_message
"It's
super
effective
"
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_text
matchup_message
else
if
matchup
1
this
could
be
compacted
a
little
but
that
would
make
potential
localization
a
little
bit
trickyif
array_length_1d
hit
1
var
matchup_message
"It's
not
very
effective
on
"
exe
targets
i
"
"
else
var
matchup_message
"It's
not
very
effective
"
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_text
matchup_message
if
critical
if
array_length_1d
hit
1
var
critical_message
"A
critical
hit
on
"
exe
targets
i
name
"
"
else
var
critical_message
"A
critical
hit
"
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_text
critical_message
if
damage
exe
targets
i
act_hp
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_death
exe
targets
i
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_round_action_anim_send_out_pokemon_hud
exe
targets
i
position
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_text
exe
targets
i
name
"
fainted
"
target_fainted
true
exe
targets
i
flag_downed
true
todo
post
death
effects
such
as
aftermath
destiny
bond
etcif
pokemon
owner
object_index
PawnPlayer
todo
this
but
for
all
pokémon
involved
in
the
takedown
and
whoever
holds
an
exp
share
and
if
the
exp
all
is
turned
on
also
you
should
probably
make
sure
the
victorious
pokémon
s
are
still
alivevar
level
get_level
pokemon
experience
base
growth_rate
if
level
MAX_LEVEL
todo
aggregate
experience
gain
i
e
if
two
pokémon
go
down
at
the
same
time
you
only
gain
experience
oncevar
exp_gain
exp_reward
pokemon
exe
targets
i
var
exp_next_level
get_experience
level
1
base
growth_rate
if
exp_gain
1
var
points
"point"
else
var
points
"points"
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_text
pokemon
name
"
gained
"
string_commas
exp_gain
true
"
experience
"
points
"
"
var
to_grow
min
exp_gain
exp_next_level
pokemon
experience
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_exp_gain
pokemon
pokemon
experience
to_grow
if
pokemon
experience
exp_gain
exp_next_level
var
new_level
get_level
pokemon
experience
exp_gain
base
growth_rate
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_text
pokemon
name
"
grew
to
level
"
string
new_level
"
"
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_level_gain
pokemon
level
new_level
if
pokemon
experience
exp_gain
exp_next_level
var
new_level_exp
get_experience
new_level
base
growth_rate
var
remainder
pokemon
experience
exp_gain
new_level_exp
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_exp_gain
pokemon
new_level_exp
remainder
todo
learning
new
moves
i
don't
know
what
foes
gaining
experience
would
look
like
but
you're
free
to
try
it
out
all
the
same
endif
type
effectiveness
if
target_fainted
for
var
j
0
j
ds_list_size
move
effects
j
if
irandom
100
move
effect_odds
j
script_execute
move
effects
j
pokemon
exe
targets
i
else
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_text
exe
targets
i
name
"
avoided
the
attack
"
break
case
BattleActions
ITEM
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_text
pokemon
name
"
used
a
n
"
World
all_items
exe
value
name
"
Implement
this
later
please
"
break
case
BattleActions
SWITCH
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_text
pokemon
name
"
switched
to
"
exe
value
name
"
Implement
this
later
please
"
break
case
BattleActions
FLEE
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_text
pokemon
name
"
fled
Implement
this
later
please
"
break
case
BattleActions
IDLE
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_text
pokemon
name
"
is
just
hanging
around
Implement
this
later
please
"
break
with
exe
instance_destroy
continue
battle_advance
void
battle_round_action_input
params
0
team
indexvar
team
Battle
teams
argument0
0
var
pokemon
Battle
contestants
argument0
0
continue
inside
these
scriptsscript_execute
team
owner
battle_input_script
team
pokemon
void
battle_round_action_send_in_leads
params
0
team
indexvar
team
Battle
teams
argument0
0
message
team
name
"
sent
out
"
team
owner
party
0
name
"
"
Battle
contestants
argument0
0
team
owner
party
0
this
is
so
each
BattlePokemon
knows
where
they
are
on
the
fieldteam
owner
party
0
position
argument0
0
void
battle_round_action_text
params
0
text
continue
in
the
message
message
argument0
0
var
still_fighting
0
for
var
i
0
i
ds_list_size
Battle
teams
i
if
team_alive
Battle
teams
i
still_fighting
switch
still_fighting
case
0
return
BattleStatus
DRAW
case
1
return
BattleStatus
WIN
default
return
BattleStatus
CONTINUE
var
t_animation
1
var
t_wait
t_animation
0
15
var
drop_rate
sprite_get_height
user
sprite_index
t_animation
World
dt
if
t
t_animation
user
z
user
z
drop_rate
else
if
t
t_wait
wait
else
instance_destroy
Battle
input_ready
true
battle_advance
t
t
World
dt
var
gain
misc_data
"gain"
var
current
misc_data
"current"
var
base
get_pokemon
user
species
var
current_level
get_level
current
base
growth_rate
var
current_level_exp
get_experience
current_level
base
growth_rate
var
next_level_exp
get_experience
current_level
1
base
growth_rate
var
difference_exp
next_level_exp
current_level_exp
if
current
gain
next_level_exp
show_error
"gained
experience
would
overflow
the
next
level
"
N
"you're
curretnly
not
allowed
to
do
that
experience
gain"
N
"
has
to
be
split
up
through
battle_round_action_execute"
true
var
clear_time
1
the
amount
of
time
it
should
take
the
exp
bar
to
fully
fillvar
delta_f
get_progress_bar_scroll_rate
clear_time
gain
difference_exp
var
scroll_time
get_progress_bar_scroll_time
clear_time
gain
difference_exp
todo
sound
effects
both
the
bubbling
noise
while
gaining
experience
and
the
fanfare
if
when
you
gain
a
level
if
we
hit
a
level
up
we
stopif
t
scroll_time
user
experience
current
gain
user
experience
user
experience
delta_f
else
cut
it
off
here
don't
worry
overflow
isn't
lost
it's
just
saved
in
the
command
to
continue
gaining
after
the
level
up
message
has
been
shown
you
could
make
the
argument
that
it
would
be
smarter
to
do
everything
here
so
you
don't
need
to
mess
with
multiple
scripts
action
commands
but
then
i
would
make
the
argument
that
i
want
to
work
with
the
system
that's
already
been
writtenuser
experience
current
gain
instance_destroy
Battle
input_ready
true
battle_advance
t
t
World
dt
var
t_animation
misc_data
"time"
var
fade_rate
1
t_animation
if
t
t_animation
if
misc_data
"starting"
0
5
var
rate
fade_rate
World
dt
else
var
rate
fade_rate
World
dt
user
alpha
user
alpha
rate
else
this
is
a
non
terminating
effect
so
we
have
to
do
this
herewith
user
instance_destroy
instance_destroy
Battle
input_ready
true
battle_advance
t
t
World
dt
var
animation_time
0
35
var
gain
misc_data
"gain"
var
current
misc_data
"current"
var
base
get_pokemon
user
species
var
current_level
get_level
current
base
growth_rate
var
current_level_exp
get_experience
current_level
base
growth_rate
var
next_level_exp
get_experience
current_level
1
base
growth_rate
var
difference_exp
next_level_exp
current_level_exp
var
f
gain
difference_exp
animation_time
World
dt
todo
sound
effects
both
the
bubbling
noise
while
gaining
experience
and
the
fanfare
if
when
you
gain
a
level
if
we
hit
a
level
up
we
stopif
t
animation_time
user
experience
next_level_exp
user
experience
user
experience
f
else
cut
it
off
here
don't
worry
overflow
isn't
lost
it's
just
saved
in
the
command
to
continue
gaining
after
the
level
up
message
has
been
shownuser
experience
min
current
gain
next_level_exp
instance_destroy
with
Battle
input_ready
true
battle_advance
t
t
World
dt
void
ba_move_basic
var
t_wait
0
25
var
t_advance
t_wait
0
2
var
t_wait_2
t_advance
0
25
var
t_retract
t_wait_2
0
2
var
t_terminate
t_retract
0
25
var
advance_speed
60
var
retract_speed
60
var
midpoint
BATTLEFIELD_SIZE
2
if
t
t_wait
wait
obviously
else
if
t
t_advance
var
draw
Battle
drawables
user
position
var
dir
draw
center_direction
var
xc
advance_speed
dcos
dir
World
dt
var
yc
advance_speed
dsin
dir
World
dt
draw
x
draw
x
xc
draw
y
draw
y
yc
else
if
t
t_wait_2
if
ds_map_exists
misc_data
"hit
flash"
for
var
i
0
i
ds_list_size
target_list
i
fade
timestampsvar
t_fadein
0
25
var
t_still
t_fadein
0
05
var
t_fadeout
t_still
0
25
other
stuffvar
draw
Battle
drawables
target_list
i
position
var
f
0
35
var
relative_z
sprite_get_height
draw
sprite_index
f
draw
scale
draw
yscale
var
position
world_to_2d
draw
x
draw
y
draw
z
relative_z
you
may
want
to
save
this
to
the
misc
data
map
but
in
this
case
we
just
fire
and
forget
new_effect_2d
position
vec2
xx
position
vec2
yy
spr_anim_move_tackle
e2d_generic
t_fadein
t_still
t_fadeout
alpha
0
audio_play_sound
se_hit
1
false
misc_data
"hit
flash"
true
otherwise
wait
else
if
t
t_retract
var
draw
Battle
drawables
user
position
var
dir
draw
center_direction
180
var
xc
advance_speed
dcos
dir
World
dt
var
yc
advance_speed
dsin
dir
World
dt
draw
x
draw
x
xc
draw
y
draw
y
yc
else
if
t
t_terminate
wait
some
more
else
instance_destroy
Battle
input_ready
true
battle_advance
t
t
World
dt
void
ba_move_claw
var
t_wait
0
25
var
t_advance
t_wait
0
2
var
t_claw_1
t_advance
0
75
var
t_claw_2
t_claw_1
0
75
var
t_retract
t_claw_2
0
2
var
t_terminate
t_retract
0
25
var
advance_speed
60
var
retract_speed
60
var
midpoint
BATTLEFIELD_SIZE
2
if
t
t_wait
wait
obviously
else
if
t
t_advance
var
draw
Battle
drawables
user
position
var
dir
draw
center_direction
var
xc
advance_speed
dcos
dir
World
dt
var
yc
advance_speed
dsin
dir
World
dt
draw
x
draw
x
xc
draw
y
draw
y
yc
else
if
t
t_claw_1
if
ds_map_exists
misc_data
"claw"
for
var
i
0
i
ds_list_size
target_list
i
fade
timestampsvar
t_fadein
0
var
t_still
t_fadein
1
5
var
t_fadeout
t_still
0
25
other
stuffvar
draw
Battle
drawables
target_list
i
position
var
f
0
35
var
relative_z
sprite_get_height
draw
sprite_index
f
draw
scale
draw
yscale
var
position
world_to_2d
draw
x
draw
y
draw
z
relative_z
animationvar
animation_rate
9
you
may
want
to
save
this
to
the
misc
data
map
but
in
this
case
we
just
fire
and
forgetmisc_data
"claw"
new_effect_2d
position
vec2
xx
position
vec2
yy
spr_anim_move_claw
e2d_generic
t_fadein
t_still
t_fadeout
1
5
1
5
0
c_white
0
animation_rate
false
audio_play_sound
se_move_slash
1
false
otherwise
wait
else
if
t
t_claw_2
dont
repeat
yourself
they
sayif
ds_map_exists
misc_data
"claw
2
se"
audio_play_sound
se_move_slash
1
false
misc_data
"claw
2
se"
true
otherwise
wait
again
else
if
t
t_retract
var
draw
Battle
drawables
user
position
var
dir
draw
center_direction
180
var
xc
advance_speed
dcos
dir
World
dt
var
yc
advance_speed
dsin
dir
World
dt
draw
x
draw
x
xc
draw
y
draw
y
yc
else
if
t
t_terminate
wait
some
more
else
instance_destroy
Battle
input_ready
true
battle_advance
t
t
World
dt
void
ba_move_opp_basic
var
t_wait
0
25
var
t_advance
t_wait
0
2
var
t_wait_2
t_advance
0
25
var
t_retract
t_wait_2
0
2
var
t_terminate
t_retract
0
25
var
advance_speed
60
var
retract_speed
60
var
midpoint
BATTLEFIELD_SIZE
2
if
t
t_wait
wait
obviously
else
if
t
t_advance
var
draw
Battle
drawables
user
position
var
dir
draw
center_direction
var
xc
advance_speed
dcos
dir
World
dt
var
yc
advance_speed
dsin
dir
World
dt
draw
x
draw
x
xc
draw
y
draw
y
yc
else
if
t
t_wait_2
if
ds_map_exists
misc_data
"hit
flash"
for
var
i
0
i
ds_list_size
target_list
i
var
draw
Battle
drawables
target_list
i
position
var
f
0
35
var
relative_z
sprite_get_height
draw
sprite_index
f
draw
scale
draw
yscale
var
position
world_to_2d
draw
x
draw
y
draw
z
relative_z
new_effect_2d
position
vec2
xx
position
vec2
yy
spr_anim_move_tackle
e2d_hit
alpha
0
audio_play_sound
se_hit
1
false
misc_data
"hit
flash"
true
otherwise
wait
else
if
t
t_retract
var
draw
Battle
drawables
user
position
var
dir
draw
center_direction
180
var
xc
advance_speed
dcos
dir
World
dt
var
yc
advance_speed
dsin
dir
World
dt
draw
x
draw
x
xc
draw
y
draw
y
yc
else
if
t
t_terminate
wait
some
more
else
instance_destroy
with
Battle
input_ready
true
battle_advance
t
t
World
dt
void
ba_move_basic
var
t_wait
0
25
var
t_advance
t_wait
0
2
var
t_wait_2
t_advance
0
25
var
t_retract
t_wait_2
0
2
var
t_terminate
t_retract
0
25
var
advance_speed
60
var
retract_speed
60
var
midpoint
BATTLEFIELD_SIZE
2
if
t
t_wait
wait
obviously
else
if
t
t_advance
var
draw
Battle
drawables
user
position
var
dir
draw
center_direction
var
xc
advance_speed
dcos
dir
World
dt
var
yc
advance_speed
dsin
dir
World
dt
draw
x
draw
x
xc
draw
y
draw
y
yc
else
if
t
t_wait_2
if
ds_map_exists
misc_data
"hit
flash"
for
var
i
0
i
ds_list_size
target_list
i
fade
timestampsvar
t_fadein
0
25
var
t_still
t_fadein
0
05
var
t_fadeout
t_still
0
25
other
stuffvar
draw
Battle
drawables
target_list
i
position
var
f
0
35
var
relative_z
sprite_get_height
draw
sprite_index
f
draw
scale
draw
yscale
var
position
world_to_2d
draw
x
draw
y
draw
z
relative_z
you
may
want
to
save
this
to
the
misc
data
map
but
in
this
case
we
just
fire
and
forget
new_effect_2d
position
vec2
xx
position
vec2
yy
spr_anim_move_punch
e2d_generic
t_fadein
t_still
t_fadeout
alpha
0
audio_play_sound
se_hit
1
false
misc_data
"hit
flash"
true
otherwise
wait
else
if
t
t_retract
var
draw
Battle
drawables
user
position
var
dir
draw
center_direction
180
var
xc
advance_speed
dcos
dir
World
dt
var
yc
advance_speed
dsin
dir
World
dt
draw
x
draw
x
xc
draw
y
draw
y
yc
else
if
t
t_terminate
wait
some
more
else
instance_destroy
Battle
input_ready
true
battle_advance
t
t
World
dt
void
ba_move_quick_attack
var
t_wait
0
1
var
t_advance
t_wait
0
35
var
t_wait_2
t_advance
0
25
var
t_terminate
t_wait_2
0
25
var
advance_speed
60
var
retract_speed
60
var
midpoint
BATTLEFIELD_SIZE
2
var
circle_rate
360
0
35
var
user_draw
Battle
drawables
user
position
var
circle_radius
8
var
circle_x
user_draw
battle_x
circle_radius
dcos
180
user_draw
center_direction
var
circle_y
user_draw
battle_y
circle_radius
dsin
180
user_draw
center_direction
var
particle_count
16
var
particle_color
merge_color
c_yellow
c_white
0
5
var
particle_scale
0
75
var
particle_speed_min
64
var
particle_speed_max
192
var
particle_speed_damping
1
if
t
t_wait
wait
else
if
t
t_advance
var
dir
point_direction
circle_x
circle_y
user_draw
x
user_draw
y
circle_rate
World
dt
user_draw
x
circle_x
circle_radius
dcos
dir
user_draw
y
circle_y
circle_radius
dsin
dir
else
if
t
t_wait_2
user_draw
x
user_draw
battle_x
user_draw
y
user_draw
battle_y
if
ds_map_exists
misc_data
"hit"
for
var
i
0
i
ds_list_size
target_list
i
fade
timestampsvar
t_fadein
0
var
t_still
t_fadein
0
5
var
t_fadeout
t_still
0
25
other
stuffvar
draw
Battle
drawables
target_list
i
position
var
f
0
35
var
relative_z
sprite_get_height
draw
sprite_index
f
draw
scale
draw
yscale
var
position
world_to_2d
draw
x
draw
y
draw
z
relative_z
for
var
j
0
j
particle_count
j
var
pxsp
random_range
particle_speed_min
particle_speed_max
choose
1
1
var
pysp
random_range
particle_speed_min
particle_speed_max
choose
1
1
new_effect_2d
position
vec2
xx
position
vec2
yy
spr_part_sphere
e2d_generic
t_fadein
t_still
t_fadeout
particle_scale
particle_scale
0
particle_color
0
0
false
pxsp
pysp
particle_speed_damping
audio_play_sound
se_hit
1
false
misc_data
"hit"
true
otherwise
wait
else
if
t
t_terminate
wait
some
more
else
instance_destroy
Battle
input_ready
true
battle_advance
t
t
World
dt
void
ba_move_swords_dance
var
t_dance
1
6
this
is
how
long
the
sound
effect
isvar
t_wait
t_dance
0
25
var
sword_count
6
var
sword_distance
16
var
sword_height
24
var
sword_rotation_rate
180
degrees
per
secondvar
sword_scale
0
3
if
t
t_dance
var
draw
Battle
drawables
user
position
var
anglef
360
sword_count
if
ds_map_exists
misc_data
"setup"
the
fade
timestamps
that
get
passed
to
the
effectvar
t_fadein
0
1
var
t_still
t_dance
0
1
var
t_fadeout
t_dance
for
var
i
0
i
sword_count
i
var
tx
draw
x
sword_distance
dcos
i
anglef
var
ty
draw
y
sword_distance
dsin
i
anglef
var
tz
draw
z
sword_height
misc_data
"sword
"
string
i
new_effect_world
tx
ty
tz
0
0
point_direction
draw
x
draw
y
tx
ty
sword_scale
spr_anim_move_swords_dance
e3d_generic
t_fadein
t_still
t_fadeout
1
1
0
c_white
0
audio_play_sound
se_move_swords_dance
1
false
misc_data
"setup"
true
for
var
i
0
i
sword_count
i
var
effect
misc_data
"sword
"
string
i
var
dir
point_direction
draw
x
draw
y
effect
x
effect
y
sword_rotation_rate
World
dt
effect
x
draw
x
sword_distance
dcos
dir
effect
y
draw
y
sword_distance
dsin
dir
else
if
t
t_wait
wait
else
instance_destroy
Battle
input_ready
true
battle_advance
t
t
World
dt
ba_move_opp_basic
var
t_shrink_time
1
if
t
0
user
mask_script
bm_retract_submit
user
misc_data
"mask
alpha"
0
else
if
t
t_shrink_time
user
misc_data
"mask
alpha"
approach
user
misc_data
"mask
alpha"
1
World
dt
t_shrink_time
user
xscale
approach
user
xscale
0
t_shrink_time
World
dt
user
yscale
user
xscale
else
user
mask_script
null
instance_destroy
Battle
input_ready
true
battle_advance
t
t
World
dt
pixels
to
movevar
slide_dist_x
user
offscreen_x
user
battle_x
var
slide_dist_y
user
offscreen_y
user
battle_y
alpha
per
secondvar
fade_rate
1
units
per
secondvar
slide_rate
60
how
long
the
slide
takesvar
transition_time
user
distance
slide_rate
other
timestampsvar
still_time
transition_time
0
25
var
fade_time
still_time
user
fade_time
if
t
transition_time
user
x
user
x
slide_dist_x
World
dt
transition_time
user
y
user
y
slide_dist_y
World
dt
transition_time
else
if
t
still_time
pause
else
if
t
fade_time
user
alpha
user
alpha
1
fade_rate
World
dt
else
user
alpha
0
instance_destroy
Battle
input_ready
true
battle_advance
t
t
World
dt
var
clear_time
1
the
amount
of
time
it
should
take
the
hp
bar
to
fully
emptyvar
amount
misc_data
"amount"
the
amount
of
hp
that
has
to
scrollvar
delta_f
get_progress_bar_scroll_rate
clear_time
amount
user
act
Stats
HP
var
scroll_time
get_progress_bar_scroll_time
clear_time
amount
user
act
Stats
HP
if
t
scroll_time
user
act_hp
0
user
act_hp
max
0
user
act_hp
delta_f
else
this
will
hopefully
be
the
correct
value
but
just
in
case
there's
floating
point
imprecision
or
somethinguser
act_hp
max
0
floor
misc_data
"initial"
amount
instance_destroy
Battle
input_ready
true
battle_advance
t
t
World
dt
pixels
to
movevar
slide_rate_x
user
battle_x
user
offscreen_x
var
slide_rate_y
user
battle_y
user
offscreen_y
how
long
the
slide
takesvar
transition_time
0
25
if
t
transition_time
user
x
user
x
slide_rate_x
World
dt
transition_time
user
y
user
y
slide_rate_y
World
dt
transition_time
else
instance_destroy
Battle
input_ready
true
battle_advance
t
t
World
dt
pixels
to
movevar
slide_dist_x
user
battle_x
user
offscreen_x
var
slide_dist_y
user
battle_y
user
offscreen_y
how
long
the
fade
transition
takesvar
fade_time
user
fade_time
var
still_time
fade_time
0
25
units
per
secondvar
slide_rate
60
how
long
the
slide
takesvar
transition_time
still_time
user
distance
slide_rate
if
t
fade_time
user
alpha
user
alpha
1
fade_time
World
dt
else
if
t
still_time
do
nothing
else
if
t
transition_time
user
x
user
x
slide_dist_x
World
dt
transition_time
still_time
user
y
user
y
slide_dist_y
World
dt
transition_time
still_time
else
instance_destroy
Battle
input_ready
true
battle_advance
t
t
World
dt
pixels
to
movevar
slide_rate_x
user
offscreen_x
user
battle_x
var
slide_rate_y
user
offscreen_y
user
battle_y
how
long
the
slide
takesvar
transition_time
0
25
if
t
transition_time
user
x
user
x
slide_rate_x
World
dt
transition_time
user
y
user
y
slide_rate_y
World
dt
transition_time
else
instance_destroy
Battle
input_ready
true
battle_advance
t
t
World
dt
var
t_mask_fadein
0
2
var
t_mask_animation
t_mask_fadein
0
4
var
t_mask_fadeout
t_mask_animation
0
2
var
t_wait
t_mask_fadeout
0
15
var
mask_speed_x
misc_data
"mask
speed
x"
var
mask_speed_y
misc_data
"mask
speed
y"
if
t
0
user
mask_script
bm_stat_change
user
misc_data
"mask
sprite"
misc_data
"mask
sprite"
user
misc_data
"mask
alpha"
0
user
misc_data
"mask
x"
0
user
misc_data
"mask
y"
0
audio_play_sound
misc_data
"sound"
1
false
else
if
t
t_mask_fadein
user
misc_data
"mask
alpha"
user
misc_data
"mask
alpha"
World
dt
t_mask_fadein
else
if
t
t_mask_animation
else
if
t
t_mask_fadeout
user
misc_data
"mask
alpha"
user
misc_data
"mask
alpha"
World
dt
t_mask_fadein
else
if
t
t_wait
wait
else
user
mask_script
null
instance_destroy
Battle
input_ready
true
battle_advance
user
misc_data
"mask
x"
user
misc_data
"mask
x"
mask_speed_x
World
dt
user
misc_data
"mask
y"
user
misc_data
"mask
y"
mask_speed_y
World
dt
t
t
World
dt
var
t_animation
1
var
t_wait
t_animation
0
15
var
drop_rate
sprite_get_height
user
sprite_index
t_animation
World
dt
if
t
t_animation
user
z
user
z
drop_rate
else
if
t
t_wait
wait
else
instance_destroy
with
Battle
input_ready
true
battle_advance
t
t
World
dt
var
t_mask_fadein
0
2
var
t_mask_animation
t_mask_fadein
0
4
var
t_mask_fadeout
t_mask_animation
0
2
var
t_wait
t_mask_fadeout
0
15
var
mask_speed_x
0
var
mask_speed_y
64
if
t
0
user
mask_script
bm_stat_raise
user
misc_data
"mask
alpha"
0
user
misc_data
"mask
x"
0
user
misc_data
"mask
y"
0
else
if
t
t_mask_fadein
user
misc_data
"mask
alpha"
user
misc_data
"mask
alpha"
World
dt
t_mask_fadein
else
if
t
t_mask_animation
else
if
t
t_mask_fadeout
user
misc_data
"mask
alpha"
user
misc_data
"mask
alpha"
World
dt
t_mask_fadein
else
if
t
t_wait
wait
else
user
mask_script
null
instance_destroy
with
Battle
input_ready
true
battle_advance
user
misc_data
"mask
x"
user
misc_data
"mask
x"
mask_speed_x
World
dt
user
misc_data
"mask
y"
user
misc_data
"mask
y"
mask_speed_y
World
dt
t
t
World
dt
var
t_rise_time
1
if
t
0
user
mask_script
bm_retract_submit
user
misc_data
"mask
alpha"
1
else
if
t
t_rise_time
user
misc_data
"mask
alpha"
approach
user
misc_data
"mask
alpha"
0
World
dt
t_rise_time
user
xscale
approach
user
xscale
1
t_rise_time
World
dt
user
yscale
user
xscale
else
user
mask_script
null
instance_destroy
Battle
input_ready
true
battle_advance
t
t
World
dt
var
animation_time
1
var
animation_rate
0
08
if
t
animation_time
user
image_index
min
user
image_index
animation_rate
sprite_get_number
user
sprite_index
1
else
instance_destroy
Battle
input_ready
true
battle_advance
t
t
World
dt
void
be_attack_raise_1
user
target
this
activates
instantly
upon
being
processed
it
does
not
get
queued
var
target
argument1
unused
hereif
argument0
mods
Stats
ATTACK
STAT_MOD_LIMIT
this
is
going
to
be
used
again
at
some
point
so
it's
probably
a
good
idea
to
make
it
its
own
scriptds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_stat_change_animation
argument0
ba_stat_change
spr_anim_stat_rise
0
64
se_battle_increase
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_text
argument0
name
"'s
Attack
rose
"
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_stat_set
argument0
Stats
ATTACK
argument0
mods
Stats
ATTACK
1
else
ds_queue_enqueue
individual_actions
add_battle_individual_action
battle_individual_action_text
argument0
name
"'s
Attack
won't
go
any
higher
"
void
BattleDrawable
bg_draw_drawable
the
surface
is
drawn
in
BattleDrawable
Step
being
in
3D
mode
sort
of
breaks
surfaces
and
targeting
surfaces
sort
of
breaks
3D
mode
and
that
took
me
all
day
to
figure
out
do
you'd
better
appreciate
itd3d_transform_add_rotation_x
90
d3d_transform_add_scaling
scale
scale
scale
d3d_transform_add_translation
x
y
z
draw_surface_ext
surface
sprite_get_xoffset
sprite_index
xscale
sprite_get_yoffset
sprite_index
yscale
xscale
yscale
rotation
c_white
1
d3d_transform_set_identity
void
BattleHUD
bg_draw_hud
if
user
noone
var
base
get_pokemon
user
species
var
level
get_level
user
experience
base
growth_rate
var
bar_height
16
var
exp_bar_height
12
var
text_y
y
32
var
hp_bar_y
text_y
24
var
hp_text_y
hp_bar_y
24
var
exp_bar_y
hp_text_y
28
draw_set_font
FPokemonMedium
foes
not
player
pawns
have
slightly
smaller
status
boxesif
user
owner
Camera
battle_pawn
var
offset
0
else
var
offset
40
draw_set_valign
fa_middle
text
rowdraw_rectangle_9s
spr_window9s_hgss
x
y
UI_BATTLE_HUD_WIDTH
UI_BATTLE_HUD_HEIGHT
offset
draw_text
x
32
text_y
user
name
var
level_string
"Lv
"
string
level
draw_sprite
spr_gender
user
gender
x
UI_BATTLE_HUD_WIDTH
32
32
string_width
level_string
text_y
draw_set_halign
fa_right
draw_text
x
UI_BATTLE_HUD_WIDTH
32
text_y
level_string
hp
bar
rowdraw_health_bar
x
UI_BATTLE_HUD_WIDTH
2
hp_bar_y
bar_height
2
x
UI_BATTLE_HUD_WIDTH
UI_BATTLE_HUD_BUFFER_X
hp_bar_y
bar_height
2
user
act_hp
user
act
Stats
HP
if
user
owner
battle_show_details
show
exp
bar
can
be
placeholder
for
now
show
hp
text
if
user
owner
Camera
battle_pawn
hp
text
rowdraw_set_halign
fa_center
draw_text
x
UI_BATTLE_HUD_WIDTH
32
3
4
hp_text_y
string
floor
user
act_hp
"
"
string
user
act
Stats
HP
exp
bar
rowvar
exp_base
get_experience
level
base
growth_rate
var
exp_next
get_experience
level
1
base
growth_rate
var
f
user
experience
exp_base
exp_next
get_experience
level
base
growth_rate
draw_exp_bar
x
64
exp_bar_y
exp_bar_height
2
x
UI_BATTLE_HUD_WIDTH
32
exp_bar_y
exp_bar_height
2
f
draw_set_halign
fa_left
draw_set_valign
fa_top
If
you
want
to
make
this
fancier
you
can
use
some
kind
of
tile
texture
instead
see
bm_stat_change
I
don't
really
want
to
do
that
so
I'm
just
going
to
use
a
solid
color
draw_set_alpha
misc_data
"mask
alpha"
draw_set_colour
c_white
draw_rectangle
0
0
sprite_width
sprite_height
false
draw_set_blend_mode
bm_subtract
draw_set_color
c_black
draw_set_alpha
1
draw_rectangle
0
0
sprite_width
sprite_height
false
draw_set_blend_mode
bm_add
draw_sprite_general
sprite_index
floor
image_index
0
0
sprite_width
sprite_height
0
0
1
1
0
c_black
c_black
c_black
c_black
1
draw_set_blend_mode
bm_normal
juju
adams
you
are
a
god
https
www
reddit
com
r
gamemaker
comments
3aqpx5
surface_alpha_mask_help
csfp0svdraw_sprite_tiled_ext
misc_data
"mask
sprite"
0
misc_data
"mask
x"
misc_data
"mask
y"
1
1
c_white
misc_data
"mask
alpha"
draw_set_blend_mode
bm_subtract
draw_set_color
c_black
draw_set_alpha
1
draw_rectangle
0
0
sprite_width
sprite_height
false
draw_set_blend_mode
bm_add
draw_sprite_general
sprite_index
floor
image_index
0
0
sprite_width
sprite_height
0
0
1
1
0
c_black
c_black
c_black
c_black
1
draw_set_blend_mode
bm_normal
boolean
boolean
string
var
text
string_lower
argument0
switch
text
case
"true"
case
"1"
return
true
case
"false"
case
"0"
return
false
show_error
"you
tried
to
read
a
boolean
out
of
a
non
boolean
"
text
true
World
message_text
""
World
message_text_t
0
ds_list_clear
World
message_options
ds_list_clear
World
message_option_ids
array
const_battle_sprites
var
array
array_create
ClassBattleSprites
RIVAL
array
ClassBattleSprites
PLAYER
spr_ethan_back
array
ClassBattleSprites
RIVAL
spr_silver_front
return
array
array
const_class_battle_bgm
var
array
array_create
ClassBattleBGM
SILENCE
array
ClassBattleBGM
SILENCE
bgm_silence
return
array
array
const_class_battle_sprites
var
array
array_create
ClassBattleSprites
RIVAL
array
ClassBattleSprites
PLAYER
spr_ethan_back
array
ClassBattleSprites
RIVAL
spr_silver_front
return
array
array
const_class_intro_me
var
array
array_create
ClassIntroME
SILENCE
array
ClassIntroME
SILENCE
bgm_silence
return
array
array
const_class_victory_bgm
var
array
array_create
ClassVictoryBGM
SILENCE
array
ClassVictoryBGM
SILENCE
bgm_silence
return
array
array
const_egg_groups
enum
EggGroups
MONSTER
WATER1
BUG
FLYING
FIELD
FAIRY
GRASS
HUMANLIKE
WATER3
MINERAL
AMORPHOUS
WATER2
DITTO
DRAGON
UNDISCOVERED
var
array
array
array_create
EggGroups
UNDISCOVERED
array
EggGroups
MONSTER
add_egg_group
"Monster"
false
false
array
EggGroups
WATER1
add_egg_group
"Water
1"
false
false
array
EggGroups
BUG
add_egg_group
"Bug"
false
false
array
EggGroups
FLYING
add_egg_group
"Flying"
false
false
array
EggGroups
FIELD
add_egg_group
"Field"
false
false
array
EggGroups
FAIRY
add_egg_group
"Fairy"
false
false
array
EggGroups
GRASS
add_egg_group
"Grass"
false
false
array
EggGroups
HUMANLIKE
add_egg_group
"Human
like"
false
false
array
EggGroups
WATER3
add_egg_group
"Water
3"
false
false
array
EggGroups
MINERAL
add_egg_group
"Mineral"
false
false
array
EggGroups
AMORPHOUS
add_egg_group
"Amorphous"
false
false
array
EggGroups
WATER2
add_egg_group
"Water
2"
false
false
array
EggGroups
DITTO
add_egg_group
"Ditto"
false
true
array
EggGroups
DRAGON
add_egg_group
"Dragon"
false
false
array
EggGroups
UNDISCOVERED
add_egg_group
"Undiscovered"
true
false
return
array
array
const_evolution_methods
enum
EvolutionMethods
HAPPINESS
HAPPINESSDAY
HAPPINESSNIGHT
LEVEL
TRADE
TRADEITEM
ITEM
ATTACKGREATER
ATKDEFEQUAL
DEFENSEGREATER
SILCOON
CASCOON
NINJASK
SHEDINJA
BEAUTY
ITEMMALE
ITEMFEMALE
DAYHOLDITEM
NIGHTHOLDITEM
HASMOVE
HASINPARTY
LEVELMALE
LEVELFEMALE
LOCATION
TRADESPECIES
LEVELDAY
LEVELNIGHT
LEVELDARKINPARTY
LEVELRAIN
HAPPINESSMOVETYPE
var
array
array
array_create
EvolutionMethods
HAPPINESSMOVETYPE
array
EvolutionMethods
HAPPINESS
add_evolution_method
"Happiness"
null
"HAPPINESS"
array
EvolutionMethods
HAPPINESSDAY
add_evolution_method
"Happiness
Day"
null
"HAPPINESSDAY"
array
EvolutionMethods
HAPPINESSNIGHT
add_evolution_method
"Happiness
Night"
null
"HAPPINESSNIGHT"
array
EvolutionMethods
LEVEL
add_evolution_method
"Level"
null
"LEVEL"
array
EvolutionMethods
TRADE
add_evolution_method
"Trade"
null
"TRADE"
array
EvolutionMethods
TRADEITEM
add_evolution_method
"Trade
Item"
null
"TRADEITEM"
array
EvolutionMethods
ITEM
add_evolution_method
"Item"
null
"ITEM"
array
EvolutionMethods
ATTACKGREATER
add_evolution_method
"Attack
Defense"
null
"ATTACKGREATER"
array
EvolutionMethods
ATKDEFEQUAL
add_evolution_method
"Attack
Defense"
null
"ATKDEFEQUAL"
array
EvolutionMethods
DEFENSEGREATER
add_evolution_method
"Attack
Defense"
null
"DEFENSEGREATER"
array
EvolutionMethods
SILCOON
add_evolution_method
"Silcoon"
null
"SILCOON"
array
EvolutionMethods
CASCOON
add_evolution_method
"Cascoon"
null
"CASCOON"
array
EvolutionMethods
NINJASK
add_evolution_method
"Ninjask"
null
"NINJASK"
array
EvolutionMethods
SHEDINJA
add_evolution_method
"Shedinja"
null
"SHEDINJA"
array
EvolutionMethods
BEAUTY
add_evolution_method
"Beauty"
null
"BEAUTY"
array
EvolutionMethods
ITEMMALE
add_evolution_method
"Item
Male"
null
"ITEMMALE"
array
EvolutionMethods
ITEMFEMALE
add_evolution_method
"Item
Female"
null
"ITEMFEMALE"
array
EvolutionMethods
DAYHOLDITEM
add_evolution_method
"Hold
Item
Day"
null
"DAYHOLDITEM"
array
EvolutionMethods
NIGHTHOLDITEM
add_evolution_method
"Hold
Item
Night"
null
"NIGHTHOLDITEM"
array
EvolutionMethods
HASMOVE
add_evolution_method
"Has
Move"
null
"HASMOVE"
array
EvolutionMethods
HASINPARTY
add_evolution_method
"Has
In
Party"
null
"HASINPARTY"
array
EvolutionMethods
LEVELMALE
add_evolution_method
"Level
Male"
null
"LEVELMALE"
array
EvolutionMethods
LEVELFEMALE
add_evolution_method
"Level
Female"
null
"LEVELFEMALE"
array
EvolutionMethods
LOCATION
add_evolution_method
"Location"
null
"LOCATION"
array
EvolutionMethods
TRADESPECIES
add_evolution_method
"Trade
Species"
null
"TRADESPECIES"
array
EvolutionMethods
LEVELDAY
add_evolution_method
"Level
Day"
null
"LEVELDAY"
array
EvolutionMethods
LEVELNIGHT
add_evolution_method
"Level
Night"
null
"LEVELNIGHT"
array
EvolutionMethods
LEVELDARKINPARTY
add_evolution_method
"Level
Dark
in
Party"
null
"LEVELDARKINPARTY"
array
EvolutionMethods
LEVELRAIN
add_evolution_method
"Level
Rain"
null
"LEVELRAIN"
array
EvolutionMethods
HAPPINESSMOVETYPE
add_evolution_method
"Happiness
Has
Move
of
Type"
null
"HAPPINESSMOVETYPE"
return
array
array
const_item_pockets
enum
ItemPockets
ITEMS
MEDICINE
BALLS
TMS
BERRIES
MAIL
BATTLE
KEY
var
array
array
array_create
ItemPockets
KEY
todo
change
the
colors
to
something
more
appropriate
later
maybearray
ItemPockets
ITEMS
add_item_pocket
"Items"
c_pink
1
1
array
ItemPockets
MEDICINE
add_item_pocket
"Medicine"
c_pink
1
1
array
ItemPockets
BALLS
add_item_pocket
"Balls"
c_pink
1
1
array
ItemPockets
TMS
add_item_pocket
"TMs
HMs"
c_pink
1
1
array
ItemPockets
BERRIES
add_item_pocket
"Berries"
c_pink
1
1
array
ItemPockets
MAIL
add_item_pocket
"Mail"
c_pink
1
1
array
ItemPockets
BATTLE
add_item_pocket
"Battle
Items"
c_pink
1
1
array
ItemPockets
KEY
add_item_pocket
"Key
Items"
c_pink
1
1
return
array
debug
"remember
to
define
natures
at
some
point"
enum
Natures
DEFAULT
var
array
array_create
Natures
DEFAULT
array
Natures
DEFAULT
add_nature
"Default
Nature"
1
1
1
1
1
1
return
array
void
debug
string
if
DEBUG
string_length
argument0
0
show_debug_message
argument0
var
f
file_text_open_append
LOG_FILE
file_text_write_string
f
argument0
file_text_writeln
f
file_text_close
f
void
draw_exp_bar
x
y
x2
y2
f
draw_rectangle_colour
argument0
argument1
argument2
argument3
c_white
c_white
c_white
c_white
false
draw_rectangle_colour
argument0
argument1
argument0
argument2
argument0
argument4
argument3
c_exp
c_exp
c_exp
c_exp
false
todo
when
you
have
time
reverse
the
direction
of
these
lines
so
you
can
turn
culling
back
off
and
save
a
vertex
batchd3d_set_culling
false
var
w
3
draw_line_width_colour
argument0
argument1
argument2
argument1
w
c_black
c_black
draw_line_width_colour
argument0
argument3
argument2
argument3
w
c_black
c_black
draw_line_width_colour
argument0
argument1
argument0
argument3
w
c_black
c_black
draw_line_width_colour
argument2
argument1
argument2
argument3
w
c_black
c_black
d3d_set_culling
true
void
draw_health_bar
x
y
x2
y2
f
var
c
if
argument4
0
5
c
c_health_high
else
if
argument4
0
25
c
c_health_mid
else
c
c_health_low
draw_rectangle_colour
argument0
argument1
argument2
argument3
c_white
c_white
c_white
c_white
false
draw_rectangle_colour
argument0
argument1
argument0
argument2
argument0
argument4
argument3
c
c
c
c
false
todo
when
you
have
time
reverse
the
direction
of
these
lines
so
you
can
turn
culling
back
off
and
save
a
vertex
batchd3d_set_culling
false
var
w
4
draw_line_width_colour
argument0
argument1
argument2
argument1
w
c_black
c_black
draw_line_width_colour
argument0
argument3
argument2
argument3
w
c_black
c_black
draw_line_width_colour
argument0
argument1
argument0
argument3
w
c_black
c_black
draw_line_width_colour
argument2
argument1
argument2
argument3
w
c_black
c_black
d3d_set_culling
true
void
draw_menu_from_list
list
selected
index
this
only
draws
the
list
it
does
not
control
it
you
most
likely
want
to
use
menu_input
in
conjunction
with
this
var
max_n
ds_list_size
argument0
if
max_n
2
var
text_font
FPokemonLarge
var
text_font
FPokemonMediumLarge
else
if
max_n
3
var
text_font
FPokemonMediumLarge
var
text_font
FPokemonMedium
else
var
text_font
FPokemonMedium
draw_set_font
text_font
var
max_width
ds_list_max_width
argument0
var
text_spacing
font_get_size
text_font
1
5
var
box_width
max_width
2
UI_TEXT_BOX_OFFSET_W
text_spacing
2
the
bigger
the
font
the
more
horizontal
buffer
the
text
box
will
have
as
wellvar
box_height
text_spacing
max_n
2
var
box_x
room_width
box_width
var
box_y
room_height
box_height
draw_rectangle_9s
spr_window9s_hgss
box_x
box_y
box_width
box_height
draw_set_valign
fa_middle
for
var
i
0
i
max_n
i
draw_text
box_x
text_spacing
UI_TEXT_BOX_OFFSET_W
box_y
text_spacing
i
1
5
argument0
i
if
argument1
0
draw_selection_arrow
box_x
UI_TEXT_BOX_OFFSET_W
text_spacing
3
box_y
text_spacing
argument1
1
5
void
draw_rectangle_9s
sprite
x
y
width
height
var
sw
sprite_get_width
argument0
3
var
sh
sprite_get_height
argument0
3
draw_sprite_part
argument0
0
0
0
sw
sh
argument1
argument2
draw_sprite_part
argument0
0
2
sw
0
sw
sh
argument1
argument3
sw
argument2
draw_sprite_part
argument0
0
2
sw
2
sh
sw
sh
argument1
argument3
sw
argument2
argument4
sh
draw_sprite_part
argument0
0
0
2
sh
sw
sh
argument1
argument2
argument4
sh
var
hxscale
argument3
2
sw
sw
var
vyscale
argument4
2
sh
sh
draw_sprite_general
argument0
0
sw
0
sw
sh
argument1
sw
argument2
hxscale
1
0
c_white
c_white
c_white
c_white
1
draw_sprite_general
argument0
0
sw
sh
2
sw
sh
argument1
sw
argument2
argument4
sh
hxscale
1
0
c_white
c_white
c_white
c_white
1
draw_sprite_general
argument0
0
0
sh
sw
sh
argument1
argument2
sh
1
vyscale
0
c_white
c_white
c_white
c_white
1
draw_sprite_general
argument0
0
2
sw
sh
sw
sh
argument1
argument3
sw
argument2
sh
1
vyscale
0
c_white
c_white
c_white
c_white
1
draw_sprite_general
argument0
0
sw
sh
sw
sh
argument1
sw
argument2
sh
hxscale
vyscale
0
c_white
c_white
c_white
c_white
1
void
draw_selection_arrow
x
y
var
scale
2
draw_sprite_ext
spr_select
0
argument0
argument1
scale
scale
0
c_white
1
list
ds_list_clone
list
this
doesn't
really
do
anything
special
it
just
makes
ds_list_copy
slightly
shorter
var
list
ds_list_create
ds_list_copy
list
argument0
return
list
double
ds_list_max_width
list
this
depends
on
having
the
correct
font
set
be
careful
var
winner
0
for
var
i
0
i
ds_list_size
argument0
i
winner
max
winner
string_width
string
argument0
i
return
winner
void
ds_list_swap
list
a
b
var
t
argument0
argument1
argument0
argument1
argument0
argument2
argument0
argument2
t
array
ds_list_to_array
list
var
array
array_create
ds_list_size
argument0
for
var
i
0
i
ds_list_size
argument0
i
array
i
argument0
i
return
array
todo
support
for
alpha
fades
that
dont
go
0
1
if
t
t_fadein
alpha
alpha
World
dt
t_fadein
else
if
t
t_still
alpha
1
else
if
t
t_fadeout
alpha
alpha
World
dt
t_fadeout
t_still
else
alpha
0
instance_destroy
for
some
reason
this
doesn't
work
well
or
at
all
with
negative
xscale
you
should
probably
figure
that
one
sooner
or
later
draw_sprite_ext
sprite_index
image_index
x
y
xscale
yscale
rotation
color
alpha
if
animation_loop
image_index
image_index
animation_rate
World
dt
image_number
else
image_index
min
image_number
1
image_index
animation_rate
World
dt
x
x
xspeed
World
dt
y
y
yspeed
World
dt
xspeed
xspeed
1
damping
World
dt
yspeed
yspeed
1
damping
World
dt
t
t
World
dt
if
t
t_fadein
alpha
alpha
World
dt
t_fadein
else
if
t
t_still
else
if
t
t_fadeout
alpha
alpha
World
dt
t_fadeout
t_still
else
instance_destroy
draw_sprite_ext
sprite_index
image_index
x
y
xscale
yscale
rotation
color
alpha
t
t
World
dt
todo
support
for
alpha
fades
that
dont
go
0
1
todo
support
for
blend
modes
draw_set_alpha
alpha
draw_rectangle_colour
0
0
W
H
color
color
color
color
false
draw_set_alpha
1
t
t
World
dt
void
e3d_billboard
todo
support
for
alpha
fades
that
dont
go
0
1
todo
this
could
probably
be
collapsed
into
the
e3d_generic
really
easilyif
t
t_fadein
alpha
alpha
World
dt
t_fadein
else
if
t
t_still
alpha
1
else
if
t
t_fadeout
alpha
alpha
World
dt
t_fadeout
t_still
else
alpha
0
instance_destroy
d3d_transform_add_rotation_x
90
xrot
d3d_transform_add_rotation_y
yrot
disregard
direction
it's
automatically
oriented
to
face
the
camera
game
maker
gurus
will
probably
tell
you
to
use
the
view
matrix
or
something
but
honestly
that's
for
people
who
don't
object
to
using
their
brainsd3d_transform_add_rotation_z
point_direction
Camera
x
Camera
y
x
y
90
d3d_transform_add_scaling
scale
scale
scale
d3d_transform_add_translation
x
y
z
draw_sprite_ext
sprite_index
floor
image_index
0
0
xscale
yscale
rotation
color
alpha
d3d_transform_set_identity
if
animation_loop
image_index
image_index
animation_rate
World
dt
image_number
else
image_index
min
image_number
1
image_index
animation_rate
World
dt
x
x
xspeed
World
dt
y
y
yspeed
World
dt
z
z
zspeed
World
dt
xspeed
xspeed
1
damping
World
dt
yspeed
yspeed
1
damping
World
dt
zspeed
zspeed
1
damping
World
dt
t
t
World
dt
void
e3d_generic
todo
support
for
alpha
fades
that
dont
go
0
1
if
t
t_fadein
alpha
alpha
World
dt
t_fadein
else
if
t
t_still
alpha
1
else
if
t
t_fadeout
alpha
alpha
World
dt
t_fadeout
t_still
else
alpha
0
instance_destroy
d3d_transform_add_rotation_x
90
xrot
d3d_transform_add_rotation_y
yrot
d3d_transform_add_rotation_z
direction
d3d_transform_add_scaling
scale
scale
scale
d3d_transform_add_translation
x
y
z
draw_sprite_ext
sprite_index
floor
image_index
0
0
xscale
yscale
rotation
color
alpha
d3d_transform_set_identity
if
animation_loop
image_index
image_index
animation_rate
World
dt
image_number
else
image_index
min
image_number
1
image_index
animation_rate
World
dt
x
x
xspeed
World
dt
y
y
yspeed
World
dt
z
z
zspeed
World
dt
xspeed
xspeed
1
damping
World
dt
yspeed
yspeed
1
damping
World
dt
zspeed
zspeed
1
damping
World
dt
t
t
World
dt
var
t_fadein
0
25
var
t_still
t_fadein
0
05
var
t_fadeout
t_still
0
25
if
t
t_fadein
alpha
alpha
World
dt
t_fadein
else
if
t
t_still
else
if
t
t_fadeout
alpha
alpha
World
dt
t_fadeout
t_still
else
instance_destroy
draw_sprite_ext
sprite_index
image_index
x
y
xscale
yscale
rotation
color
alpha
t
t
World
dt
int
exp_reward
winner
loser
var
a
1
1
if
wild
pokémon
1
5
if
trainer
pokémon
1
if
gen
7
rulesvar
b
get_pokemon
argument1
species
reward_exp
var
e
1
1
if
no
lucky
egg
held
1
5
if
lucky
egg
heldvar
f
1
1
2
if
two
hearts
of
affection
1
otherwisevar
l
get_level
argument1
get_pokemon
argument1
species
growth_rate
var
lp
get_level
argument0
get_pokemon
argument0
species
growth_rate
var
p
1
1
if
no
experience
power
is
active
n
for
experience
point
powervar
s
2
no
exp
share
twice
the
number
of
pokémon
who
have
participated
in
the
battle
and
survived
one
exp
share
twice
the
number
of
pokémon
who
have
participated
in
the
battle
held
exp
share
exp
all
something
else
deal
with
it
later
THIS
WILL
REQUIRE
THIS
FUNCTION
TO
TAKE
MORE
PARAMETERS
EVENTUALLYvar
t
1
1
if
this
bis
ot
1
5
if
domestically
obtained
1
7
if
internationally
obtainedvar
v
1
1
2
if
should
have
evolved
and
gen
6
rules
1
otherwisevar
level
get_level
argument0
experience
get_pokemon
argument0
species
growth_rate
var
next
get_experience
level
1
get_pokemon
argument0
species
growth_rate
var
difference
next
argument0
experience
if
World
settings
battle
use_scaled_exp
return
floor
a
t
b
e
l
p
f
v
7
s
else
return
floor
a
b
l
5
s
power
3
l
10
2
5
power
l
lp
10
2
5
1
t
e
p
list
file_text_as_list
filename
ignore
comments
var
ignore_comments
true
switch
argument_count
case
2
ignore_comments
argument
1
var
f
file_text_open_read
argument
0
var
text
ds_list_create
while
file_text_eof
f
var
line
file_text_read_string
f
comments
aren't
a
thing
in
the
unmodified
pbs
but
there's
a
chance
that
some
people
might
want
to
use
themif
ignore_comments
string_char_at
line
1
'
'
ds_list_add
text
line
file_text_readln
f
file_text_close
f
return
text
return
World
all_abilities
argument0
int
get_ability_from_name
name
use
internal
name
switch
argument_count
case
2
return
get_generic_from_name
World
all_abilities
argument
0
argument
1
return
get_generic_from_name
World
all_abilities
argument
0
int
get_asset_from_name
array
name
var
name
string_minimal
argument1
for
var
i
0
i
array_length_1d
argument0
i
if
string_minimal
argument0
i
name
return
i
return
1
return
World
all_class_battle_bgm
argument0
return
get_asset_from_name
World
all_class_battle_bgm
argument0
return
World
all_class_battle_sprites
argument0
return
get_asset_from_name
World
all_class_battle_sprites
argument0
return
World
all_class_intro_me
argument0
return
get_asset_from_name
World
all_class_intro_me
argument0
return
World
all_class_victory_bgm
argument0
return
get_asset_from_name
World
all_class_victory_bgm
argument0
color
get_color_from_name
name
switch
string_minimal
argument0
case
"black"
return
c_black
case
"blue"
return
c_blue
case
"brown"
return
c_brown
case
"gray"
return
c_gray
case
"green"
return
c_green
case
"pink"
return
c_pink
case
"purple"
return
c_purple
case
"red"
return
c_red
case
"white"
return
c_white
case
"yellow"
return
c_yellow
i'm
guessing
you're
rarely
going
to
get
to
this
but
just
in
case
if
you
omit
this
the
script
will
return
0
which
is
also
c_black
return
c_white
int
get_egg_group_from_name
name
use
internal
name
switch
argument_count
case
2
return
get_generic_from_name
World
all_egg_groups
argument
0
argument
1
return
get_generic_from_name
World
all_egg_groups
argument
0
int
get_evolution_method_from_name
name
use
internal
name
switch
argument_count
case
2
return
get_generic_from_name
World
all_evolution_methods
argument
0
argument
1
return
get_generic_from_name
World
all_evolution_methods
argument
0
int
get_experience
level
growth
rate
var
b
power
argument0
3
switch
argument1
case
GrowthRates
ERRATIC
if
argument0
50
return
floor
b
100
argument0
else
if
argument0
68
return
floor
b
150
argument0
100
else
if
argument0
98
return
floor
b
floor
1911
10
argument0
3
500
return
floor
b
160
argument0
100
case
GrowthRates
FAST
return
floor
4
b
5
case
GrowthRates
MEDIUM_FAST
return
floor
b
case
GrowthRates
MEDIUM_SLOW
this
gets
max'd
because
of
the
lovely
experience
underflow
glitchreturn
max
floor
6
b
5
15
power
argument0
2
100
argument0
140
1
case
GrowthRates
SLOW
return
floor
5
b
4
case
GrowthRates
FLUCTUATING
if
argument0
15
return
floor
b
floor
argument0
1
3
24
50
else
if
argument0
36
return
floor
b
argument0
14
50
return
floor
b
floor
argument0
2
24
50
int
get_generic_from_name
array
name
use
internal
name
var
array
argument
0
var
name
string_minimal
argument
1
var
use_internal_name
false
switch
argument_count
case
3
use_internal_name
argument
2
default
break
if
use_internal_name
for
var
i
0
i
array_length_1d
array
i
if
string_minimal
array
i
pbs_internal_name
name
return
i
else
for
var
i
0
i
array_length_1d
array
i
if
string_minimal
array
i
name
name
return
i
return
1
int
get_item_from_name
name
use
internal
name
switch
argument_count
case
2
return
get_generic_from_name
World
all_items
argument
0
argument
1
return
get_generic_from_name
World
all_items
argument
0
int
get_item_pocket_from_name
name
no
internal
name
option
here
because
this
data
type
shouldn't
have
one
for
now
return
get_generic_from_name
World
all_item_pockets
argument
0
int
get_level
experience
growth
rate
this
script
used
to
be
a
glorious
abuse
of
the
postfix
operator
but
alas
it
didn't
work
so
i
had
no
choice
but
to
write
less
stupid
code
but
its
memory
shall
live
on
in
this
comment
var
n
0
while
get_experience
1
n
argument1
argument0
return
n
var
n
1
while
argument0
get_experience
1
n
argument1
n
return
n
double
get_matchup
attacking
defending
return
get_type
argument0
on
argument1
double
get_matchup
type
BattlePokemon
var
m
1
for
var
i
0
i
ds_list_size
argument1
types
i
m
m
get_matchup
argument0
argument1
types
i
return
m
return
World
all_moves
argument0
int
get_move_from_name
name
use
internal
name
switch
argument_count
case
2
return
get_generic_from_name
World
all_moves
argument
0
argument
1
return
get_generic_from_name
World
all_moves
argument
0
return
World
all_natures
argument0
int
get_nature_from_name
name
return
get_generic_from_name
World
all_natures
false
double
get_nature_modifier
nature
stat
return
get_nature
argument0
affects
argument1
double
get_pawn_level
Pawn
var
maximal
1
for
var
i
0
i
ds_list_size
argument0
party
i
var
test
argument0
party
i
maximal
max
maximal
get_level
test
experience
get_pokemon
test
species
growth_rate
return
maximal
return
World
all_pokemon
argument0
sprite
get_pokemon_battle_sprite
species
side
enum
SpriteSides
FRONT
BACK
todo
stuff
here
based
on
gender
shiny
form
and
maybe
a
few
other
thingsswitch
argument1
case
SpriteSides
FRONT
return
get_pokemon
argument0
spr_front
case
SpriteSides
BACK
return
get_pokemon
argument0
spr_back
int
get_pokemon_from_name
name
use
internal
name
switch
argument_count
case
2
return
get_generic_from_name
World
all_pokemon
argument
0
argument
1
return
get_generic_from_name
World
all_pokemon
argument
0
sprite
get_pokemon_sprite
species
side
enum
SpriteSides
FRONT
BACK
switch
argument1
case
SpriteSides
FRONT
return
World
all_pokemon
argument0
spr_front
case
SpriteSides
BACK
return
World
all_pokemon
argument0
spr_back
double
get_prize_money
Pawn
return
get_pawn_level
argument0
argument0
reward
double
get_progress_bar_scroll_rate
clear
time
amount
max
amount
see
also
get_progress_bar_scroll_timevar
delta_bar
argument1
argument2
var
scroll_time
argument0
delta_bar
var
f
argument1
scroll_time
return
f
World
dt
double
get_progress_bar_scroll_time
clear
time
amount
max
amount
see
also
get_progress_bar_scroll_ratevar
delta_bar
argument1
argument2
return
argument0
delta_bar
return
World
all_trainers
argument0
return
World
all_trainer_classes
argument0
int
get_trainer_class_from_name
name
use
internal
name
switch
argument_count
case
2
return
get_generic_from_name
World
all_trainer_classes
argument
0
argument
1
return
get_generic_from_name
World
all_trainer_classes
argument
0
int
get_trainer_from_data
name
class
id
version
if
you
don't
know
the
class
index
use
get_trainer_from_name
insteadvar
name
string_minimal
argument
0
var
class
argument
1
var
version
1
switch
argument_count
case
3
version
argument
2
default
break
for
var
i
0
i
array_length_1d
World
all_trainers
i
if
string_minimal
World
all_trainers
i
name
name
World
all_trainers
i
class
class
World
all_trainers
i
version
version
return
i
return
1
int
get_trainer_from_name
name
class
name
version
if
you
already
know
the
class
index
use
get_trainer_from_data
instead
it's
unlikely
that
any
additional
parameters
are
going
to
be
added
to
this
so
i'm
not
going
to
write
out
the
switch
treeif
argument_count
2
var
version
1
else
var
version
argument
2
return
get_trainer_from_data
argument
0
get_trainer_class_from_name
argument
1
version
return
World
all_types
argument0
int
get_type_from_name
name
use
internal
name
switch
argument_count
case
2
return
get_generic_from_name
World
all_types
argument
0
argument
1
return
get_generic_from_name
World
all_types
argument
0
void
heal
BattlePokemon
argument0
act_hp
argument0
act
Stats
HP
argument0
status
MajorStatus
NONE
void
heal_all
Pawn
for
var
i
0
i
ds_list_size
argument0
party
i
heal
argument0
party
i
int
hex
string
var
result
0
special
unicode
valuesvar
ZERO
ord
'0'
var
NINE
ord
'9'
var
A
ord
'A'
var
F
ord
'F'
for
var
i
1
i
string_length
argument0
i
var
c
ord
string_char_at
string_upper
argument0
i
you
could
also
multiply
by
16
but
you
get
more
nerd
points
for
bitshiftsresult
result
4
if
the
character
is
a
number
or
letter
add
the
value
it
represents
to
the
totalif
c
ZERO
c
NINE
result
result
c
ZERO
else
if
c
A
c
F
result
result
c
A
10
otherwise
complain
else
show_error
"bad
input
for
hex
str
"
true
return
result
boolean
ini_read_boolean
section
key
default
return
boolean
ini_read_string
argument0
argument1
argument2
boolean
instanceof
instance
object
if
argument0
object_index
argument1
return
true
return
object_is_ancestor
argument0
object_index
argument1
boolean
is_clamped
n
a
b
return
clamp
argument0
argument1
argument2
argument0
double
math_accuracy
BattlePokemon
return
power
3
abs
argument0
mod_accuracy
3
sign
argument0
mod_accuracy
double
math_attack
BattlePokemon
return
power
2
abs
argument0
mod_attack
2
sign
argument0
mod_attack
double
math_defense
BattlePokemon
return
power
2
abs
argument0
mod_defense
2
sign
argument0
mod_defense
double
math_evade
BattlePokemon
return
power
3
abs
argument0
mod_evade
3
sign
argument0
mod_evade
double
math_mod
BattlePokemon
Stat
return
power
2
abs
argument0
mods
argument1
2
sign
argument0
mods
argument1
double
math_sp_attack
BattlePokemon
return
power
2
abs
argument0
mod_sp_attack
2
sign
argument0
mod_sp_attack
double
math_sp_defense
BattlePokemon
return
power
2
abs
argument0
mod_sp_defense
2
sign
argument0
mod_sp_defense
int
menu_input
n
list
size
search
for
examples
of
this
script
control
shift
f
to
see
how
it
works
important
argument1
should
be
the
SIZE
OF
THE
LIST
NOT
the
largest
value
this
script
treats
the
largest
value
as
list
size
minus
one
if
keyboard_check_released
vk_up
keyboard_check_released
ord
'W'
return
max
argument0
0
else
if
keyboard_check_released
vk_down
keyboard_check_released
ord
'S'
return
min
argument0
argument1
1
else
if
keyboard_check_released
vk_left
keyboard_check_released
ord
'A'
return
0
else
if
keyboard_check_released
vk_right
keyboard_check_released
ord
'D'
return
argument1
1
return
argument0
void
message
string
World
message_text
argument0
World
message_text_t
0
Effect2D
new_effect_2d
x
y
sprite
render
t_fadein
t_still
t_fadeout
xscale
yscale
rotation
color
alpha
animation
rate
animation_loop
xspeed
yspeed
damping
with
instance_create
argument
0
argument
1
Effect2D
switch
argument_count
case
17
damping
argument
16
case
16
yspeed
argument
15
case
15
xspeed
argument
14
case
14
animation_loop
argument
13
case
13
animation_rate
argument
12
case
12
alpha
argument
11
case
11
color
argument
10
case
10
rotation
argument
9
case
9
yscale
argument
8
case
8
xscale
argument
7
default
sprite_index
argument
2
render
argument
3
t_fadein
argument
4
t_still
argument
5
t_fadeout
argument
6
break
return
id
Effect2D
new_effect_world
x
y
z
xrot
yrot
zrot
scale
sprite
render
t_fadein
t_still
t_fadeout
xscale
yscale
rotation
color
alpha
animation
rate
animation
loop
xspeed
yspeed
zspeed
damping
with
instance_create
argument
0
argument
1
WorldEffect2D
switch
argument_count
case
23
damping
argument
22
case
22
zspeed
argument
21
case
21
yspeed
argument
20
case
20
xspeed
argument
19
case
19
animation_loop
argument
18
case
18
animation_rate
argument
17
case
17
alpha
argument
16
case
16
color
argument
15
case
15
rotation
argument
14
case
14
yscale
argument
13
case
13
xscale
argument
12
default
z
argument
2
xrot
argument
3
yrot
argument
4
zrot
argument
5
scale
argument
6
sprite_index
argument
7
render
argument
8
t_fadein
argument
9
t_still
argument
10
t_fadeout
argument
11
break
return
id
void
null
argument0
argumentn
Takes
any
number
of
arguments
but
doesn't
do
anything
good
for
when
you
might
need
a
placeholder
scriptfor
var
i
0
i
argument_count
i
var
go_away
argument
i
return
false
Pawn
pawn_create
class
internal
name
name
version
object
displayname
var
pname
pclass
var
pversion
1
var
pdisplayname
''
var
ptype
Pawn
switch
argument_count
case
5
pdisplayname
argument
4
case
4
ptype
argument
3
case
3
pversion
argument
2
case
2
pname
argument
1
case
1
I
don't
like
doing
this
but
without
a
trainer
types
enum
it's
going
to
be
very
difficult
to
do
this
and
I
don't
want
to
use
a
trainer
type
enum
because
it
would
make
adding
new
data
that
much
more
annoying
pclass
get_trainer_class_from_name
argument
0
true
break
if
string_length
pdisplayname
0
pdisplayname
get_trainer_class
pclass
name
"
"
pname
with
instance_create
0
0
ptype
trainer_index
get_trainer_from_data
pname
pclass
pversion
ds_list_copy
party
get_trainer
trainer_index
party
name
pdisplayname
battle_sprite
get_class_battle_sprite
get_trainer_class
get_trainer
trainer_index
class
battle_sprite
return
id
array
pbs_read_items
filename
the
ability
pbs
is
a
csv
var
text
file_text_as_list
argument0
var
array
array_create
ds_list_size
text
for
var
i
0
i
ds_list_size
text
i
var
terms
split
text
i
'
'
false
as
far
as
i
know
the
ability
file
doesn't
have
variable
entry
sizesvar
internal_name
terms
1
var
name
terms
2
var
summary
terms
3
array
i
add_ability
name
babl_default
summary
internal_name
ds_list_destroy
text
return
array
array
pbs_read_items
filename
the
item
pbs
is
a
csv
var
text
file_text_as_list
argument0
var
array
array_create
ds_list_size
text
for
var
i
0
i
ds_list_size
text
i
var
terms
split
text
i
'
'
false
var
internal_name
''
var
name
''
var
plural
''
var
pocket
1
var
price
0
var
description
''
var
overworld
0
var
battle
0
var
special
0
var
move
1
switch
array_length_1d
terms
case
11
move
get_move_from_name
terms
10
true
case
10
todo
convert
this
into
some
other
cless
clunky
piece
of
dataspecial
real
terms
9
case
9
todo
convert
this
into
some
other
cless
clunky
piece
of
databattle
real
terms
8
case
8
todo
convert
this
into
some
other
cless
clunky
piece
of
dataoverworld
real
terms
7
case
7
description
terms
6
case
6
price
real
terms
5
case
5
pocket
get_item_pocket_from_name
terms
4
case
4
plural
terms
3
case
3
name
terms
2
case
2
internal_name
terms
1
array
i
add_item
name
plural
pocket
price
overworld
battle
special
move
description
internal_name
ds_list_destroy
text
return
array
array
pbs_read_moves
filename
the
move
pbs
is
a
csv
var
text
file_text_as_list
argument0
var
array
array_create
ds_list_size
text
for
var
i
0
i
ds_list_size
text
i
var
terms
split
text
i
'
'
false
var
name
''
var
internal_name
''
var
effect_codes
array_create
0
var
base_power
50
var
type
Types
NORMAL
var
category
MoveCategories
PHYSICAL
var
accuracy
100
var
pp
20
var
effect_chances
array_create
1
var
target
0
var
priority
0
var
flags
0
var
description
''
switch
array_length_1d
terms
case
14
description
terms
13
case
13
flags
0
var
A
ord
'A'
var
Z
ord
'Z'
for
var
j
1
j
string_length
terms
12
j
var
c
string_ord_at
string_upper
terms
12
j
if
is_clamped
c
A
Z
flags
flags
1
c
A
case
12
priority
real
terms
11
case
11
i
could
do
math
on
this
too
but
since
the
values
need
to
be
manually
mapped
to
an
enum
anyway
there's
not
much
pointswitch
terms
10
case
"00"
default
target
MoveTargets
ADJACENT
break
case
"01"
target
MoveTargets
NONE
break
case
"02"
target
MoveTargets
ADJACENTRANDOM
break
case
"04"
target
MoveTargets
ALLOPPONENTS
break
case
"08"
target
MoveTargets
ALLNONUSER
break
case
"10"
target
MoveTargets
USER
break
case
"20"
target
MoveTargets
BATTLEFIELD
break
case
"40"
target
MoveTargets
USERTEAM
break
case
"80"
target
MoveTargets
OPPONENTTEAM
break
case
"100"
target
MoveTargets
PARTNER
break
case
"200"
target
MoveTargets
SINGLETEAMMATE
break
case
"400"
target
MoveTargets
SINGLEOPPONENT
break
case
"800"
target
MoveTargets
SINGLEACROSS
break
case
10
effect_chances
0
real
terms
9
case
9
pp
real
terms
8
case
8
accuracy
real
terms
7
case
7
switch
string_lower
terms
6
case
"physical"
default
category
MoveCategories
PHYSICAL
break
case
"special"
category
MoveCategories
SPECIAL
break
case
"status"
category
MoveCategories
STATUS
break
case
6
type
get_type_from_name
terms
5
true
case
5
base_power
real
terms
4
case
4
effect_codes
pbs_read_move_function_code
terms
3
It's
possible
if
unlikely
that
the
pbs
effect
codes
are
broken
up
into
multiple
move
effects
thunder
fang
may
paralyze
or
flinch
for
example
var
ec
effect_chances
0
for
var
j
array_length_1d
effect_codes
1
j
0
j
effect_chances
j
ec
case
3
name
terms
2
case
2
internal_name
terms
1
array
i
add_move
name
type
category
pp
base_power
accuracy
priority
target
description
ba_move_basic
effect_codes
effect_chances
internal_name
ds_list_destroy
text
return
array
array
pbs_read_move_function_code
hex
string
var
value
hex
argument0
todo
sort
these
outvar
effects
array_create
1
effects
0
null
return
effects
array
pbs_read_pokemon
filename
the
monster
PBS
is
an
ini
ini_open
argument0
var
n
1
while
ini_section_exists
string
n
n
var
array
array_create
n
2
array_clear
array
1
a
few
of
the
data
sets
are
REALLY
LONG
and
the
data
is
accessed
so
ridiculously
frequently
which
takes
a
lot
of
cpu
cycles
so
we're
going
to
cache
it
all
firstvar
move_map
ds_map_create
for
var
i
0
i
array_length_1d
all_moves
i
move_map
all_moves
i
pbs_internal_name
i
var
item_map
ds_map_create
for
var
i
0
i
array_length_1d
all_items
i
item_map
all_items
i
pbs_internal_name
i
var
ability_map
ds_map_create
for
var
i
0
i
array_length_1d
all_abilities
i
ability_map
all_abilities
i
pbs_internal_name
i
var
type_map
ds_map_create
for
var
i
0
i
array_length_1d
all_types
i
type_map
all_types
i
pbs_internal_name
i
var
egg_group_map
ds_map_create
for
var
i
0
i
array_length_1d
all_egg_groups
i
egg_group_map
all_egg_groups
i
pbs_internal_name
i
var
evolution_method_map
ds_map_create
for
var
i
0
i
array_length_1d
all_evolution_methods
i
evolution_method_map
all_evolution_methods
i
pbs_internal_name
i
var
pokemon_map
ds_map_create
first
we
need
to
populate
the
array
of
typesfor
var
i
0
i
n
1
i
var
section
string
i
1
var
name
ini_read_string
section
"Name"
"Bulbasaur"
var
internal_name
ini_read_string
section
"InternalName"
"BULBASAUR"
This
is
slow
because
it
grows
an
array
But
it's
used
to
interpret
PBS
and
if
you
know
what
you're
doing
it
won't
execute
in
a
shipped
game
so
that's
okay
You
could
look
up
the
number
of
types
and
create
the
array
of
that
size
but
honestly
that's
a
lot
of
work
for
something
this
simple
var
types
null
types
0
type_map
ini_read_string
section
"Type1"
"NORMAL"
ini_key_exists
would
be
way
more
elegant
but
it
also
appears
to
take
a
lot
of
time
also
pbs
files
will
only
ever
have
one
or
two
typesvar
tt
type_map
ini_read_string
section
"Type2"
"QMARKS"
if
tt
Types
QMARKS
types
1
tt
var
stats
split
ini_read_string
section
"BaseStats"
"50
50
50
50
50
50"
'
'
true
essentials
formats
stats
like
hp
atk
def
spe
spa
spd
but
i
format
them
like
hp
atk
def
spa
spd
spe
so
we
have
to
do
a
little
workarray_swap
stats
Stats
SPATTACK
Stats
SPEED
var
gender_string
ini_read_string
section
"GenderRate"
"Genderless"
var
gender_rate
switch
string_minimal
gender_string
case
"alwaysmale"
gender_rate
0
break
case
"femaleoneeighth"
gender_rate
0
125
break
case
"female25percent"
gender_rate
0
25
break
case
"female50percent"
gender_rate
0
5
break
case
"female75percent"
gender_rate
0
75
break
case
"femaleseveneighths"
gender_rate
0
875
break
case
"alwaysfemale"
gender_rate
1
break
case
"genderless"
default
gender_rate
1
break
var
growth_string
ini_read_string
section
"GrowthRate"
"Parabolic"
var
growth_rate
switch
string_minimal
growth_string
case
"fast"
growth_rate
GrowthRates
FAST
break
case
"medium"
case
"mediumfast"
growth_rate
GrowthRates
MEDIUM_FAST
break
case
"slow"
growth_rate
GrowthRates
SLOW
case
"parabolic"
case
"mediumslow"
growth_rate
GrowthRates
MEDIUM_SLOW
break
case
"erratic"
growth_rate
GrowthRates
ERRATIC
break
case
"fluctuating"
default
growth_rate
GrowthRates
FLUCTUATING
break
var
base_exp
ini_read_real
section
"BaseEXP"
50
var
ev_rewards
split
ini_read_string
section
"EffortPoints"
"0
1
0
0
1
0"
'
'
true
and
againarray_swap
ev_rewards
Stats
SPATTACK
Stats
SPEED
var
catch_rate
ini_read_real
section
"Rareness"
100
var
happiness
ini_read_real
section
"Happiness"
70
var
ability_text
split
ini_read_string
section
"Abilities"
"SWIFTSWIM"
'
'
var
hidden_ability_text
split
ini_read_string
section
"HiddenAbility"
"SWIFTSWIM"
'
'
var
abilities
array_create
array_length_1d
ability_text
var
hidden_abilities
array_create
array_length_1d
hidden_ability_text
for
var
j
0
j
array_length_1d
abilities
j
abilities
j
ability_map
ability_text
j
for
var
j
0
j
array_length_1d
hidden_abilities
j
hidden_abilities
j
ability_map
hidden_ability_text
j
var
move_text
split
ini_read_string
section
"Moves"
""
'
'
var
moves
noone
moves
array_length_1d
move_text
2
1
1
0
for
var
j
0
j
array_height_2d
moves
j
moves
j
0
move_map
move_text
j
2
1
moves
j
1
real
move_text
j
2
var
egg_moves_text
split
ini_read_string
section
"EggMoves"
""
'
'
var
egg_moves
array_create
array_length_1d
egg_moves_text
for
var
j
0
j
array_length_1d
egg_moves
j
egg_moves
j
move_map
egg_moves_text
j
var
egg_group_text
split
ini_read_string
section
"Compatibility"
"Undiscovered"
'
'
var
egg_groups
array_create
array_length_1d
egg_group_text
for
var
j
0
j
array_length_1d
egg_groups
j
egg_groups
j
egg_group_map
egg_group_text
j
var
egg_steps
ini_read_real
section
"StepsToHatch"
6000
var
height
ini_read_real
section
"Height"
1
var
weight
ini_read_real
section
"Weight"
10
var
color
get_color_from_name
ini_read_string
section
"Color"
"Blue"
you
MAY
want
to
make
this
an
enum
too
i
don't
think
it's
an
especially
useful
attribute
though
so
i'm
not
going
to
dedicate
resources
to
it
var
shape
ini_read_real
section
"Shape"
1
var
habitat_text
ini_read_string
section
"Habitat"
"Grassland"
var
habitat
switch
string_minimal
habitat_text
case
"cave"
habitat
Habitats
CAVE
break
case
"forest"
habitat
Habitats
FOREST
break
case
"grassland"
habitat
Habitats
GRASSLAND
break
case
"mountain"
habitat
Habitats
MOUNTAIN
break
case
"roughterrain"
habitat
Habitats
ROUGHTERRAIN
break
case
"sea"
habitat
Habitats
SEA
break
case
"urban"
habitat
Habitats
URBAN
break
case
"watersedge"
habitat
Habitats
WATERSEDGE
break
case
"rare"
default
habitat
Habitats
RARE
break
var
regional_indices
split
ini_read_string
section
"RegionalNumbers"
"1
1"
'
'
true
var
kind
ini_read_string
section
"Kind"
"Seed"
evolutions
are
dealt
with
latervar
evolutions
noone
var
summary
ini_read_string
section
"Pokedex"
"the
quick
brown
fox
jumped
over
the
lazy
dog"
the
way
pokémon
does
wild
hold
items
is
"common"
50
"uncommon"
5
and
"rare"
1
UNLESS
all
three
values
are
the
same
in
which
case
the
item
appears
100
of
the
time
i
decided
it
doesn't
have
to
be
like
this
and
you
can
have
any
item
distribution
that
you
want
with
a
resolution
of
1
100
but
that
means
that
interpreting
the
pbs
data
is
a
bit
complicated
var
wild_item_distribution
array_create
100
var
wild_item_common
item_map
ini_read_string
section
"WildItemCommon"
""
var
wild_item_uncommon
item_map
ini_read_string
section
"WildItemUncommon"
""
var
wild_item_rare
item_map
ini_read_string
section
"WildItemRare"
""
if
wild_item_common
wild_item_uncommon
wild_item_rare
array_clear
wild_item_distribution
wild_item_common
else
array_clear
wild_item_distribution
1
for
var
j
0
j
50
j
wild_item_distribution
j
wild_item_common
for
var
j
50
j
55
j
wild_item_distribution
j
wild_item_uncommon
wild_item_distribution
55
wild_item_rare
var
form_name
ini_read_string
section
"FormName"
""
var
incense
item_map
ini_read_string
section
"Incense"
""
array
i
add_pokemon
name
types
stats
gender_rate
growth_rate
base_exp
ev_rewards
catch_rate
happiness
abilities
hidden_abilities
moves
egg_moves
egg_groups
egg_steps
height
weight
color
shape
habitat
regional_indices
kind
evolutions
wild_item_distribution
form_name
incense
summary
internal_name
pokemon_map
internal_name
array
i
after
all
of
the
monsters
have
been
created
it's
safe
to
set
up
the
evolutionsfor
var
i
0
i
n
1
i
var
section
string
i
1
var
str
ini_read_string
section
"Evolutions"
""
if
string_length
str
0
var
evolution_text
split
str
'
'
var
evolutions
noone
evolutions
array_length_1d
evolution_text
3
2
0
for
var
j
0
j
array_length_1d
evolution_text
j
j
3
evolutions
j
0
pokemon_map
evolution_text
j
evolutions
j
1
evolution_method_map
evolution_text
j
1
this
is
another
thing
that
you
could
make
more
general
but
is
most
likely
only
going
to
see
use
for
parsing
pbsswitch
evolutions
j
1
case
EvolutionMethods
TRADEITEM
case
EvolutionMethods
ITEM
case
EvolutionMethods
ITEMMALE
case
EvolutionMethods
ITEMFEMALE
case
EvolutionMethods
DAYHOLDITEM
case
EvolutionMethods
NIGHTHOLDITEM
evolutions
j
2
item_map
evolution_text
j
2
break
case
EvolutionMethods
HASMOVE
evolutions
j
2
move_map
evolution_text
j
2
break
case
EvolutionMethods
HASINPARTY
case
EvolutionMethods
TRADESPECIES
evolutions
j
2
pokemon_map
evolution_text
j
2
break
case
EvolutionMethods
HAPPINESSMOVETYPE
evolutions
j
2
type_map
evolution_text
j
2
break
default
evolutions
j
2
real
evolution_text
j
2
add_pokemon_add_evolutions
array
i
evolutions
ini_close
ds_map_destroy
move_map
ds_map_destroy
item_map
ds_map_destroy
ability_map
ds_map_destroy
pokemon_map
ds_map_destroy
type_map
ds_map_destroy
egg_group_map
ds_map_destroy
evolution_method_map
return
array
array
pbs_read_trainer_classes
filename
the
trainer
class
pbs
is
a
plain
text
file
that
isn't
in
any
conventional
format
some
of
it's
csv
ish
enum
PBSParseTrainerState
CLASS
NAME
SIZE
PARTY
var
state
PBSParseTrainerState
CLASS
var
state_party_index
0
var
text
file_text_as_list
argument0
var
trainer_list
ds_list_create
var
trainer_class
trainer_name
trainer_version
trainer_items
trainer_party
This
script
does
error
handling
or
lack
thereof
I'm
going
to
try
to
add
some
kind
of
validation
to
the
other
pbs
files
at
some
point
but
because
developers
are
more
likely
to
mess
with
the
trainer
files
than
the
other
ones
I'm
prioritizing
these
var
errors
ds_list_create
for
var
i
0
i
ds_list_size
text
i
switch
state
case
PBSParseTrainerState
CLASS
trainer_class
get_trainer_class_from_name
text
i
true
if
trainer_class
1
ds_list_add
errors
"not
a
trainer
class
in
pbs
trainers
txt
"
text
i
trainer_name
''
trainer_version
1
trainer_items
array_create
0
trainer_party
noone
state
PBSParseTrainerState
NAME
state_party_index
0
break
case
PBSParseTrainerState
NAME
var
name_split
split
text
i
'
'
switch
array_length_1d
name_split
case
2
trainer_version
real
name_split
2
case
1
trainer_name
name_split
0
state
PBSParseTrainerState
SIZE
break
case
PBSParseTrainerState
SIZE
var
size_split
split
text
i
'
'
trainer_party
array_create
real
size_split
0
var
n
array_length_1d
size_split
if
n
1
trainer_items
array_create
n
1
array_copy
trainer_items
0
size_split
1
n
1
state
PBSParseTrainerState
PARTY
break
case
PBSParseTrainerState
PARTY
var
terms
split
text
i
'
'
var
name
''
var
species
0
var
level
5
var
hold_item
1
var
moves
array_create
4
array_clear
moves
1
var
ability
1
var
gender
Genders
MALE
var
form
0
var
shiny
false
var
nature
irandom
array_length_1d
all_natures
1
var
ivs
array_compose
10
10
10
10
10
10
var
happiness
70
var
shadow
false
var
ball
0
switch
array_length_1d
terms
case
17
at
some
point
you
probably
want
to
convert
this
to
the
internal
item
name
of
the
ball
instead
and
assign
a
ball
id
to
the
item
to
keep
things
simpleif
string_length
terms
16
0
ball
real
terms
16
case
16
if
string_length
terms
15
0
shadow
boolean
terms
15
case
15
name
terms
14
case
14
if
string_length
terms
13
0
happiness
real
terms
13
case
13
if
string_length
terms
12
0
array_clear
ivs
real
terms
12
case
12
if
string_length
terms
11
0
nature
get_nature_from_name
terms
11
if
nature
1
ds_list_add
errors
"bad
nature
in
pbs
trainers
txt
"
terms
11
"
of
"
terms
0
case
11
shiny
string_lower
terms
10
"shiny"
case
10
if
string_length
terms
9
0
form
real
terms
9
case
9
if
string_lower
terms
8
'm'
gender
Genders
MALE
else
if
string_lower
terms
8
'f'
gender
Genders
FEMALE
case
8
if
string_length
terms
7
0
ability
real
terms
7
if
ability
1
ds_list_add
errors
"bad
ability
in
pbs
trainers
txt
"
terms
7
"
of
"
terms
0
case
7
if
string_length
terms
6
0
moves
3
get_move_from_name
terms
6
true
if
moves
3
1
ds_list_add
errors
"bad
move
in
pbs
trainers
txt
"
terms
6
"
of
"
terms
0
case
6
if
string_length
terms
5
0
moves
2
get_move_from_name
terms
5
true
if
moves
2
1
ds_list_add
errors
"bad
move
in
pbs
trainers
txt
"
terms
5
"
of
"
terms
0
case
5
if
string_length
terms
4
0
moves
1
get_move_from_name
terms
4
true
if
moves
1
1
ds_list_add
errors
"bad
move
in
pbs
trainers
txt
"
terms
4
"
of
"
terms
0
case
4
if
string_length
terms
3
0
moves
0
get_move_from_name
terms
3
true
if
moves
0
1
ds_list_add
errors
"bad
move
in
pbs
trainers
txt
"
terms
3
"
of
"
terms
0
case
3
if
string_length
terms
2
0
hold_item
get_item_from_name
terms
2
true
if
hold_item
1
ds_list_add
errors
"bad
item
in
pbs
trainers
txt
"
terms
2
"
of
"
terms
0
case
2
if
string_length
terms
1
0
level
real
terms
1
case
1
species
get_pokemon_from_name
terms
0
true
if
species
1
ds_list_add
errors
"not
a
pokémon
species
in
pbs
trainers
txt
"
terms
0
var
ev_value
min
85
floor
level
1
5
var
evs
array_compose
ev_value
ev_value
ev_value
ev_value
ev_value
ev_value
var
base
get_pokemon
species
if
string_length
name
0
name
base
name
if
species
1
trainer_party
state_party_index
add_trainer_pokemon
species
real
terms
1
name
moves
hold_item
ability
gender
form
shiny
nature
ivs
evs
happiness
name
shadow
ball
if
state_party_index
array_length_1d
trainer_party
ds_list_add
trainer_list
add_trainer
trainer_name
trainer_class
trainer_version
trainer_items
trainer_party
state
PBSParseTrainerState
CLASS
break
if
ds_list_size
errors
0
var
error_string
''
for
var
i
0
i
ds_list_size
errors
i
error_string
error_string
errors
i
N
show_error
error_string
true
ds_list_destroy
text
we
can't
tell
the
number
of
trainers
in
the
pbs
file
based
on
the
number
of
lines
in
it
so
we
have
to
dynamically
grow
a
list
first
and
then
convert
the
list
to
an
arrayvar
array
ds_list_to_array
trainer_list
ds_list_destroy
trainer_list
ds_list_destroy
errors
return
array
array
pbs_read_trainer_classes
filename
the
trainer
class
pbs
is
a
csv
var
text
file_text_as_list
argument0
var
array
array_create
ds_list_size
text
for
var
i
0
i
ds_list_size
text
i
var
terms
split
text
i
'
'
false
var
name
''
var
internal_name
''
var
reward
32
var
ai
32
var
battle_bgm
ClassBattleBGM
SILENCE
var
victory_bgm
ClassVictoryBGM
SILENCE
var
intro_me
ClassIntroME
SILENCE
var
gender
Genders
GENDERLESS
var
ai_notes
array_create
0
switch
array_length_1d
terms
case
10
if
string_length
terms
9
0
ai_notes
array_compose
terms
9
case
9
if
string_length
terms
8
0
ai
real
terms
8
case
8
switch
string_lower
terms
7
case
"male"
gender
Genders
MALE
break
case
"female"
gender
Genders
FEMALE
break
case
"genderless"
gender
Genders
GENDERLESS
break
case
7
intro_me
get_class_intro_me_from_name
terms
6
case
6
victory_bgm
get_class_victory_bgm_from_name
terms
5
case
5
battle_bgm
get_class_battle_bgm_from_name
terms
4
case
4
if
string_length
terms
3
0
reward
real
terms
3
case
3
name
terms
2
case
2
internal_name
terms
1
array
i
add_trainer_class
name
reward
battle_bgm
victory_bgm
intro_me
ai
ai_notes
internal_name
ds_list_destroy
text
return
array
array
pbs_read_types
filename
the
type
PBS
is
an
ini
ini_open
argument0
var
n
0
while
ini_section_exists
string
n
n
var
array
array
n
1
1
array_clear
array
1
first
we
need
to
populate
the
array
of
typesfor
var
i
0
i
n
i
var
section
string
i
var
name
ini_read_string
section
"Name"
"Normal"
var
internal_name
ini_read_string
section
"InternalName"
"NORMAL"
var
special
ini_read_boolean
section
"IsSpecialType"
"false"
array
i
add_type
name
special
c_white
n
internal_name
after
all
of
the
types
have
been
created
it's
safe
to
random
access
the
DataType
on
arrayfor
var
i
0
i
n
i
var
section
string
i
var
weaknesses
split
ini_read_string
section
"Weaknesses"
""
'
'
var
resistances
split
ini_read_string
section
"Resistances"
""
'
'
var
immunities
split
ini_read_string
section
"Immunities"
""
'
'
type
i
takes
2x
damage
from
type
k
for
var
j
0
j
array_length_1d
weaknesses
j
for
var
k
0
k
n
k
if
weaknesses
j
array
k
pbs_internal_name
array
k
on
i
TYPE_WEAK
break
type
i
takes
0
5x
damage
from
type
k
for
var
j
0
j
array_length_1d
resistances
j
for
var
k
0
k
n
k
if
resistances
j
array
k
pbs_internal_name
array
k
on
i
TYPE_RESISTED
break
type
i
takes
0x
damage
from
type
k
for
var
j
0
j
array_length_1d
immunities
j
for
var
k
0
k
n
k
if
immunities
j
array
k
pbs_internal_name
array
k
on
i
TYPE_IMMUNE
break
ini_close
return
array
void
pokemon_auto_moves
BattlePokemon
var
base
get_pokemon
argument0
species
var
l
get_level
argument0
experience
base
growth_rate
var
n
ds_list_size
base
moves
1
var
count
0
while
n
0
if
base
move_levels
n
l
if
count
MOVE_LIMIT
argument0
moves
count
base
moves
n
else
ds_list_add
argument0
previous_moves
base
moves
n
n
void
pokemon_auto_stats
BattlePokemon
pokemon_reset_stat_mods
argument0
void
pokemon_reset_stat_mods
BattlePokemon
with
argument0
recalculate_all_stats
id
for
var
i
0
i
8
i
mods
i
0
ds_list_clear
types
types
ds_list_clone
get_pokemon
species
types
flag_downed
false
void
pokemon_teach_move
BattlePokemon
move
index
slot
unless
you
want
to
update
the
previous
moves
list
each
time
you
modify
the
moves
array
this
should
be
the
ONLY
way
that
the
move
array
is
modified
not
counting
the
pokemon_auto_moves
script
since
that
sets
things
up
slightly
differently
with
argument0
if
ds_list_find_index
previous_moves
moves
argument2
1
ds_list_add
previous_moves
moves
argument2
moves
argument2
argument1
void
question
string
option0
id0
optionn
idn
World
message_text
argument
0
World
message_text_t
0
for
var
i
1
i
argument_count
i
i
2
ds_list_add
World
message_options
argument
i
ds_list_add
World
message_option_ids
argument
i
1
void
recalculate_all_stats
BattlePokemon
argument0
act
Stats
HP
recalculate_stat
argument0
Stats
HP
argument0
act
Stats
ATTACK
recalculate_stat
argument0
Stats
ATTACK
argument0
act
Stats
DEFENSE
recalculate_stat
argument0
Stats
DEFENSE
argument0
act
Stats
SPATTACK
recalculate_stat
argument0
Stats
SPATTACK
argument0
act
Stats
SPDEFENSE
recalculate_stat
argument0
Stats
SPDEFENSE
argument0
act
Stats
SPEED
recalculate_stat
argument0
Stats
SPEED
int
recalculate_stat
BattlePokemon
stat
var
base
get_pokemon
argument0
species
base_stat
argument1
var
iv
argument0
ivs
argument1
var
ev
argument0
evs
argument1
var
level
get_level
argument0
experience
get_pokemon
argument0
species
growth_rate
if
argument1
Stats
HP
return
floor
base
2
iv
floor
ev
4
level
100
level
10
return
floor
floor
base
2
iv
floor
ev
4
level
100
5
get_nature_modifier
argument0
nature
argument1
int
recalculate_stat_hp
pkmn
var
base
get_pokemon
argument0
species
st_hp
var
iv
pkmn
ivs
Stats
HP
var
ev
pkmn
evs
Stats
HP
return
floor
base
iv
2
floor
ev
4
100
level
level
10
int
recalculate_stat_hp
pkmn
var
base
get_pokemon
argument0
species
st_hp
var
iv
pkmn
ivs
Stats
HP
var
ev
pkmn
evs
Stats
HP
return
floor
base
iv
2
floor
ev
4
100
level
level
10
void
battle_individual_action_question
params
0
textvar
params
argument0
message
params
0
for
var
i
0
i
ds_list_size
contestants
i
if
contestants
i
noone
ds_queue_enqueue
round_actions
add_battle_round_action
battle_round_action_check_contestant
i
battle_begin_round_action
void
battle_round_action_anim_retract_trainer
params
0
drawable
indexBattle
input_ready
false
with
instance_create
0
0
BattleAnimator
user
Battle
drawables
argument0
0
user
alpha
1
user
x
user
battle_x
user
y
user
battle_y
script
ba_retract_contestant
void
battle_round_action_check_contestant
params
var
team
Battle
teams
argument0
0
var
found
noone
for
var
i
0
i
ds_list_size
team
owner
party
i
if
alive
team
owner
party
i
found
team
owner
party
i
break
message
team
name
"'s
first
pokémon
has
"
string
team
owner
arty
0
act_hp_current
"
hp"
if
found
noone
message
team
name
"
has
no
more
healthy
Pokémon
"
else
message
team
name
"
sent
out
"
found
name
"
"
var
text_list
ds_list_create
ds_list_add
text_list
"Fight
"
"Item"
"Switch"
"Flee"
var
max_n
ds_list_size
text_list
var
max_width
ds_list_max_width
text_list
var
box_width
max_width
2
UI_TEXT_BOX_OFFSET_W
UI_TEXT_BOX_BUFFER
var
box_height
UI_TEXT_OPTION_HEIGHT
max_n
2
UI_TEXT_BOX_OFFSET_H
var
box_x
room_width
box_width
var
box_y
room_height
box_height
var
text_spacing
font_get_size
FPokemonMedium
draw_rectangle_9s
spr_window9s_hgss
box_x
box_y
box_width
box_height
draw_set_valign
fa_middle
for
var
i
0
i
max_n
i
draw_text
box_x
UI_TEXT_BOX_BUFFER
UI_TEXT_BOX_OFFSET_W
box_y
UI_TEXT_BOX_OFFSET_H
text_spacing
2
UI_TEXT_OPTION_HEIGHT
i
text_list
i
draw_selection_arrow
box_x
UI_TEXT_BOX_OFFSET_W
UI_TEXT_BOX_BUFFER
2
box_y
UI_TEXT_BOX_OFFSET_H
text_spacing
2
UI_TEXT_OPTION_HEIGHT
Battle
input_index
if
keyboard_check_released
vk_up
keyboard_check_released
ord
'W'
Battle
input_index
max
0
Battle
input_index
if
keyboard_check_released
vk_down
keyboard_check_released
ord
'S'
Battle
input_index
min
max_n
1
Battle
input_index
if
keyboard_check_released
vk_left
keyboard_check_released
ord
'A'
Battle
input_index
0
if
keyboard_check_released
vk_right
keyboard_check_released
ord
'D'
Battle
input_index
max_n
1
if
keyboard_check_released
vk_enter
switch
Battle
input_index
case
0
Battle
input_stage
BattleInputStages
MOVE
break
case
1
Battle
input_stage
BattleInputStages
ITEM
break
case
2
Battle
input_stage
BattleInputStages
SWITCH
break
case
3
Battle
input_stage
BattleInputStages
FLEE
break
ds_list_destroy
text_list
void
set_type_matchups
type
typea
matchupa
typen
matchupn
for
var
i
1
i
argument_count
i
i
2
type_matchups
argument
0
argument
i
argument
i
1
if
instance_number
object_index
1
show_error
"you
broke
the
singleton
"
object_get_name
object_index
true
array
split
string
delimiter
as
real
block
quotes
var
ESCAPE
'\'
var
block
''
var
str
delimiter
var
asreal
false
var
blockquotes
true
switch
argument_count
case
4
this
is
on
by
default
because
you
probably
want
to
use
them
more
often
than
notblockquotes
argument
3
case
3
this
will
not
check
that
it
is
safe
to
convert
to
a
real
it's
up
to
you
to
not
input
garbage
asreal
argument
2
case
2
delimiter
argument
1
str
argument
0
break
im
not
sure
if
this
will
not
blow
up
or
notif
string_length
str
0
return
array_create
0
var
index
0
This
grows
an
array
so
it's
slow
Try
not
to
use
it
in
the
step
event
or
otherwise
more
than
necessary
var
terms
terms
0
""
for
var
i
1
i
string_length
str
i
var
c
string_char_at
str
i
var
previous
string_char_at
str
i
1
break
if
you've
met
a
delimiter
the
previous
character
is
not
an
escape
you're
not
in
a
blockif
c
delimiter
previous
ESCAPE
block
''
terms
index
""
else
block
if
you've
met
a
quote
character
the
previous
character
is
not
an
escapeif
c
'"'
c
"'"
previous
ESCAPE
if
block
c
block
''
else
block
c
else
terms
index
terms
index
string_char_at
str
i
if
asreal
for
var
i
0
i
array_length_1d
terms
i
terms
i
real
terms
i
return
terms
string
string_commas
n
ignore
if
only
four
digits
var
str
string
argument
0
var
ignore
argument_count
2
argument
1
var
len
string_length
str
if
ignore
len
4
return
str
var
comma
''
for
var
i
len
i
0
i
comma
string_char_at
str
i
comma
if
i
len
i
1
len
i
1
3
0
comma
'
'
comma
return
comma
string
string_minimal
string
return
string_lettersdigits
string_lower
argument0
boolean
team_alive
BattleTeam
for
var
i
0
i
ds_list_size
argument0
owner
party
i
if
alive
argument0
owner
party
i
return
true
return
false
array
vector2
x
y
var
array
array
1
argument1
array
0
argument0
return
array
void
message
seconds
continue
after
wait
World
message_wait
argument
0
if
argument_count
2
World
message_continue_after_wait
argument
1
array
world_to_2d
targetx
targety
targetz
var
xfrom
Camera
x
var
yfrom
Camera
y
var
zfrom
Camera
z
var
xto
argument0
var
yto
argument1
var
zto
argument2
var
dX
Camera
xto
Camera
x
var
dY
Camera
yto
Camera
y
var
dZ
Camera
zto
Camera
z
var
mm
sqrt
dX
dX
dY
dY
dZ
dZ
dX
mm
dY
mm
dZ
mm
var
uX
Camera
xup
var
uY
Camera
yup
var
uZ
Camera
zup
mm
uX
dX
uY
dY
uZ
dZ
uX
mm
dX
uY
mm
dY
uZ
mm
dZ
mm
sqrt
uX
uX
uY
uY
uZ
uZ
uX
mm
uY
mm
uZ
mm
var
tFOV
tan
Camera
fov
pi
360
uX
tFOV
uY
tFOV
uZ
tFOV
var
vX
uY
dZ
dY
uZ
var
vY
uZ
dX
dZ
uX
var
vZ
uX
dY
dX
uY
vX
W
H
vY
W
H
vZ
W
H
pX
argument0
xfrom
pY
argument1
yfrom
pZ
argument2
zfrom
mm
pX
dX
pY
dY
pZ
dZ
if
mm
0
pX
mm
pY
mm
pZ
mm
else
return
vector2
0
0
var
mmx
pX
vX
pY
vY
pZ
vZ
sqr
W
H
tan
pi
8
var
mmy
pX
uX
pY
uY
pZ
uZ
sqr
tan
pi
8
return
vector2
mmx
1
2
W
1
mmy
2
H
this
is
not
code
but
it
will
work
all
the
same
this
is
also
not
code
but
it
should
still
be
useful
We didn't find File: UI_TEXT_BOX_OFFSET_H anywhere
We didn't find File: BATTLEFIELD_SIZE anywhere
We didn't find File: c_brown anywhere
We didn't find File: c_exp anywhere
We didn't find File: c_health_high anywhere
We didn't find File: c_health_low anywhere
We didn't find File: c_health_mid anywhere
We didn't find File: c_pink anywhere
We didn't find File: DEBUG anywhere
We didn't find File: H anywhere
We didn't find File: LOG_FILE anywhere
We didn't find File: MAX_LEVEL anywhere
We didn't find File: MILLION anywhere
We didn't find File: MOVE_LIMIT anywhere
We didn't find File: N anywhere
We didn't find File: STAT_MOD_LIMIT anywhere
We didn't find File: TYPE_IMMUNE anywhere
We didn't find File: TYPE_RESISTED anywhere
We didn't find File: TYPE_WEAK anywhere
We didn't find File: UI_BATTLE_HUD_BUFFER_X anywhere
We didn't find File: UI_BATTLE_HUD_BUFFER_Y anywhere
We didn't find File: UI_BATTLE_HUD_HEIGHT anywhere
We didn't find File: UI_BATTLE_HUD_WIDTH anywhere
We didn't find File: UI_TEXT_BOX_HEIGHT anywhere
We didn't find File: UI_TEXT_BOX_OFFSET_W anywhere
We didn't find File: UI_TEXT_BOX_WIDTH anywhere
We didn't find File: UI_TEXT_OPTION_BUFFER_W anywhere
We didn't find File: UI_TEXT_WIDTH anywhere
We didn't find File: W anywhere
We didn't find File: Battle anywhere
We didn't find File: BattleAnimator anywhere
We didn't find File: BattleDrawable anywhere
We didn't find File: BattleExecutableAction anywhere
We didn't find File: BattleHUD anywhere
We didn't find File: BattleIndividualAction anywhere
We didn't find File: BattlePokemon anywhere
We didn't find File: BattleRoundAction anywhere
We didn't find File: BattleTeam anywhere
We didn't find File: Camera anywhere
We didn't find File: DataAbility anywhere
We didn't find File: DataBattleEffect anywhere
We didn't find File: DataEggGroup anywhere
We didn't find File: DataEvolutionMethod anywhere
We didn't find File: DataHabitat anywhere
We didn't find File: DataIndividualEvolution anywhere
We didn't find File: DataItem anywhere
We didn't find File: DataItemPocket anywhere
We didn't find File: DataMove anywhere
We didn't find File: DataNature anywhere
We didn't find File: DataPokemon anywhere
We didn't find File: DataTrainer anywhere
We didn't find File: DataTrainerClass anywhere
We didn't find File: DataType anywhere
We didn't find File: PawnAI anywhere
We didn't find File: PawnPlayer anywhere
We didn't find File: PawnWild anywhere
We didn't find File: SettingsBattle anywhere
We didn't find File: World anywhere
We didn't find File: WorldEffect2D anywhere
We didn't find File: main anywhere
We didn't find File: room2 anywhere
We didn't find File: action_priority anywhere
We didn't find File: add_ability anywhere
We didn't find File: add_battle_executable_action anywhere
We didn't find File: add_battle_individual_action anywhere
We didn't find File: add_battle_round_action anywhere
We didn't find File: add_egg_group anywhere
We didn't find File: add_evolution anywhere
We didn't find File: add_evolution_method anywhere
We didn't find File: add_individual_evolution anywhere
We didn't find File: add_item anywhere
We didn't find File: add_item_pocket anywhere
We didn't find File: add_move anywhere
We didn't find File: add_nature anywhere
We didn't find File: add_pokemon anywhere
We didn't find File: add_pokemon_add_evolutions anywhere
We didn't find File: add_trainer anywhere
We didn't find File: add_trainer_class anywhere
We didn't find File: add_trainer_pokemon anywhere
We didn't find File: add_type anywhere
We didn't find File: alive anywhere
We didn't find File: approach anywhere
We didn't find File: array_clear anywhere
We didn't find File: array_clear_2d anywhere
We didn't find File: array_compose anywhere
We didn't find File: array_swap anywhere
We didn't find File: attach_pokemon_to_trainer anywhere
We didn't find File: attle_advance anywhere
We didn't find File: babl_default anywhere
We didn't find File: battle_action_check_contestants anywhere
We didn't find File: battle_action_check_replacements_before_turn anywhere
We didn't find File: battle_action_conclude anywhere
We didn't find File: battle_action_evaluate anywhere
We didn't find File: battle_action_execute anywhere
We didn't find File: battle_action_input anywhere
We didn't find File: battle_action_send_in_leads anywhere
We didn't find File: battle_add_drawable_and_hud anywhere
We didn't find File: battle_add_position anywhere
We didn't find File: battle_add_team anywhere
We didn't find File: battle_advance anywhere
We didn't find File: battle_advance_end anywhere
We didn't find File: battle_advance_loop anywhere
We didn't find File: battle_begin anywhere
We didn't find File: battle_begin_action anywhere
We didn't find File: battle_begin_begin anywhere
We didn't find File: battle_begin_end anywhere
We didn't find File: battle_begin_individual_action anywhere
We didn't find File: battle_begin_loop anywhere
We didn't find File: battle_begin_round_action anywhere
We didn't find File: battle_continue anywhere
We didn't find File: battle_damage anywhere
We didn't find File: battle_debug anywhere
We didn't find File: battle_end anywhere
We didn't find File: battle_event_check_contestants anywhere
We didn't find File: battle_fade anywhere
We didn't find File: battle_get_hit anywhere
We didn't find File: battle_get_valid_targets anywhere
We didn't find File: battle_individual_action_animation anywhere
We didn't find File: battle_individual_action_animation_move anywhere
We didn't find File: battle_individual_action_death anywhere
We didn't find File: battle_individual_action_execute_switch_before_turn anywhere
We didn't find File: battle_individual_action_exp_gain anywhere
We didn't find File: battle_individual_action_level_gain anywhere
We didn't find File: battle_individual_action_question anywhere
We didn't find File: battle_individual_action_scroll_health anywhere
We didn't find File: battle_individual_action_stat_change_animation anywhere
We didn't find File: battle_individual_action_stat_rise_animation anywhere
We didn't find File: battle_individual_action_stat_set anywhere
We didn't find File: battle_individual_action_switch anywhere
We didn't find File: battle_individual_action_switch_before_turn anywhere
We didn't find File: battle_individual_action_text anywhere
We didn't find File: battle_individual_action_wait anywhere
We didn't find File: battle_input_ai anywhere
We didn't find File: battle_input_player anywhere
We didn't find File: battle_input_processing anywhere
We didn't find File: battle_input_processing_control_switch_before_turn anywhere
We didn't find File: battle_input_processing_control_switch_normal anywhere
We didn't find File: battle_input_processing_grand anywhere
We didn't find File: battle_input_processing_level_stat_delta anywhere
We didn't find File: battle_input_processing_level_stat_total anywhere
We didn't find File: battle_input_processing_move anywhere
We didn't find File: battle_input_processing_reset anywhere
We didn't find File: battle_input_processing_switch anywhere
We didn't find File: battle_is_on_field anywhere
We didn't find File: battle_prioritize anywhere
We didn't find File: battle_process anywhere
We didn't find File: battle_process_begin anywhere
We didn't find File: battle_process_end anywhere
We didn't find File: battle_process_loop anywhere
We didn't find File: battle_reset_stat_mods anywhere
We didn't find File: battle_round_action_anim_retract_contestant anywhere
We didn't find File: battle_round_action_anim_retract_trainer anywhere
We didn't find File: battle_round_action_anim_send_in_leads anywhere
We didn't find File: battle_round_action_anim_send_in_pokemon anywhere
We didn't find File: battle_round_action_anim_send_in_pokemon_hud anywhere
We didn't find File: battle_round_action_anim_send_in_pokemon_walking anywhere
We didn't find File: battle_round_action_anim_send_out_pokemon_hud anywhere
We didn't find File: battle_round_action_anim_submit_contestant anywhere
We didn't find File: battle_round_action_anim_trainer_intro anywhere
We didn't find File: battle_round_action_change_contestant anywhere
We didn't find File: battle_round_action_check_contestant anywhere
We didn't find File: battle_round_action_execute anywhere
We didn't find File: battle_round_action_input anywhere
We didn't find File: battle_round_action_send_in_leads anywhere
We didn't find File: battle_round_action_text anywhere
We didn't find File: battle_status anywhere
We didn't find File: ba_death anywhere
We didn't find File: ba_exp_gain anywhere
We didn't find File: ba_fade anywhere
We didn't find File: ba_level_gain anywhere
We didn't find File: ba_move_basic anywhere
We didn't find File: ba_move_claw anywhere
We didn't find File: ba_move_opp_basic anywhere
We didn't find File: ba_move_punch anywhere
We didn't find File: ba_move_quick_attack anywhere
We didn't find File: ba_move_swords_dance anywhere
We didn't find File: ba_move_you_basic anywhere
We didn't find File: ba_retract_contestant anywhere
We didn't find File: ba_retract_trainer anywhere
We didn't find File: ba_scroll_health anywhere
We didn't find File: ba_send_in_pokemon_hud anywhere
We didn't find File: ba_send_in_pokemon_walking anywhere
We didn't find File: ba_send_out_pokemon_hud anywhere
We didn't find File: ba_stat_change anywhere
We didn't find File: ba_stat_fall anywhere
We didn't find File: ba_stat_rise anywhere
We didn't find File: ba_submit_contestant anywhere
We didn't find File: ba_trainer_intro anywhere
We didn't find File: be_attack_raise_1 anywhere
We didn't find File: bg_draw_drawable anywhere
We didn't find File: bg_draw_hud anywhere
We didn't find File: bm_retract_submit anywhere
We didn't find File: bm_stat_change anywhere
We didn't find File: boolean anywhere
We didn't find File: clear anywhere
We didn't find File: const_battle_sprites anywhere
We didn't find File: const_class_battle_bgm anywhere
We didn't find File: const_class_battle_sprites anywhere
We didn't find File: const_class_intro_me anywhere
We didn't find File: const_class_victory_bgm anywhere
We didn't find File: const_egg_groups anywhere
We didn't find File: const_evolution_methods anywhere
We didn't find File: const_item_pockets anywhere
We didn't find File: const_natures anywhere
We didn't find File: debug anywhere
We didn't find File: draw_exp_bar anywhere
We didn't find File: draw_health_bar anywhere
We didn't find File: draw_menu_from_list anywhere
We didn't find File: draw_rectangle_9s anywhere
We didn't find File: draw_selection_arrow anywhere
We didn't find File: ds_list_clone anywhere
We didn't find File: ds_list_max_width anywhere
We didn't find File: ds_list_swap anywhere
We didn't find File: ds_list_to_array anywhere
We didn't find File: e2d_generic anywhere
We didn't find File: e2d_hit anywhere
We didn't find File: e2d_overlay_monochrome anywhere
We didn't find File: e3d_billboard anywhere
We didn't find File: e3d_generic anywhere
We didn't find File: e3d_sword anywhere
We didn't find File: exp_reward anywhere
We didn't find File: file_text_as_list anywhere
We didn't find File: get_ability anywhere
We didn't find File: get_ability_from_name anywhere
We didn't find File: get_asset_from_name anywhere
We didn't find File: get_class_battle_bgm anywhere
We didn't find File: get_class_battle_bgm_from_name anywhere
We didn't find File: get_class_battle_sprite anywhere
We didn't find File: get_class_battle_sprite_from_name anywhere
We didn't find File: get_class_intro_me anywhere
We didn't find File: get_class_intro_me_from_name anywhere
We didn't find File: get_class_victory_bgm anywhere
We didn't find File: get_class_victory_bgm_from_name anywhere
We didn't find File: get_color_from_name anywhere
We didn't find File: get_egg_group_from_name anywhere
We didn't find File: get_evolution_method anywhere
We didn't find File: get_evolution_method_from_name anywhere
We didn't find File: get_experience anywhere
We didn't find File: get_generic_from_name anywhere
We didn't find File: get_item_from_name anywhere
We didn't find File: get_item_pocket_from_name anywhere
We didn't find File: get_level anywhere
We didn't find File: get_matchup anywhere
We didn't find File: get_matchup_on anywhere
We didn't find File: get_move anywhere
We didn't find File: get_move_from_name anywhere
We didn't find File: get_nature anywhere
We didn't find File: get_nature_from_name anywhere
We didn't find File: get_nature_modifier anywhere
We didn't find File: get_pawn_level anywhere
We didn't find File: get_pokemon anywhere
We didn't find File: get_pokemon_battle_sprite anywhere
We didn't find File: get_pokemon_from_name anywhere
We didn't find File: get_pokemon_sprite anywhere
We didn't find File: get_prize_money anywhere
We didn't find File: get_progress_bar_scroll_rate anywhere
We didn't find File: get_progress_bar_scroll_time anywhere
We didn't find File: get_trainer anywhere
We didn't find File: get_trainer_class anywhere
We didn't find File: get_trainer_class_from_name anywhere
We didn't find File: get_trainer_from_data anywhere
We didn't find File: get_trainer_from_name anywhere
We didn't find File: get_type anywhere
We didn't find File: get_type_from_name anywhere
We didn't find File: heal anywhere
We didn't find File: heal_all anywhere
We didn't find File: hex anywhere
We didn't find File: ini_read_boolean anywhere
We didn't find File: instanceof anywhere
We didn't find File: is_clamped anywhere
We didn't find File: math_accuracy anywhere
We didn't find File: math_attack anywhere
We didn't find File: math_defense anywhere
We didn't find File: math_evade anywhere
We didn't find File: math_mod anywhere
We didn't find File: math_sp_attack anywhere
We didn't find File: math_sp_defense anywhere
We didn't find File: menu_input anywhere
We didn't find File: message anywhere
We didn't find File: new_effect_2d anywhere
We didn't find File: new_effect_world anywhere
We didn't find File: null anywhere
We didn't find File: pawn_create anywhere
We didn't find File: pbs_read_abilities anywhere
We didn't find File: pbs_read_items anywhere
We didn't find File: pbs_read_moves anywhere
We didn't find File: pbs_read_move_function_code anywhere
We didn't find File: pbs_read_pokemon anywhere
We didn't find File: pbs_read_trainers anywhere
We didn't find File: pbs_read_trainer_classes anywhere
We didn't find File: pbs_read_types anywhere
We didn't find File: pokemon_auto_moves anywhere
We didn't find File: pokemon_auto_stats anywhere
We didn't find File: pokemon_reset_stat_mods anywhere
We didn't find File: pokemon_teach_move anywhere
We didn't find File: question anywhere
We didn't find File: recalculate_all_stats anywhere
We didn't find File: recalculate_stat anywhere
We didn't find File: recalculate_stat_hp anywhere
We didn't find File: recalculate_stat_not_hp anywhere
We didn't find File: script198 anywhere
We didn't find File: script21 anywhere
We didn't find File: script213 anywhere
We didn't find File: script23 anywhere
We didn't find File: script3 anywhere
We didn't find File: script35 anywhere
We didn't find File: set_type_matchups anywhere
We didn't find File: singleton anywhere
We didn't find File: split anywhere
We didn't find File: string_commas anywhere
We didn't find File: string_minimal anywhere
We didn't find File: team_alive anywhere
We didn't find File: vector2 anywhere
We didn't find File: wait anywhere
We didn't find File: world_to_2d anywhere
We didn't find File: timeline_test anywhere
